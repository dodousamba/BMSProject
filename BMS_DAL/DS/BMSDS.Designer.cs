//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BMS_DAL.DS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BMSDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BMSDS : global::System.Data.DataSet {
        
        private TSys_UsersDataTable tableTSys_Users;
        
        private TInvoicesDataTable tableTInvoices;
        
        private TVesselsDataTable tableTVessels;
        
        private TFixturesDataTable tableTFixtures;
        
        private TInvoiceDetailsDataTable tableTInvoiceDetails;
        
        private global::System.Data.DataRelation relationTFixtures_TInvoices;
        
        private global::System.Data.DataRelation relationTInvoices_TInvoiceDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BMSDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected BMSDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TSys_Users"] != null)) {
                    base.Tables.Add(new TSys_UsersDataTable(ds.Tables["TSys_Users"]));
                }
                if ((ds.Tables["TInvoices"] != null)) {
                    base.Tables.Add(new TInvoicesDataTable(ds.Tables["TInvoices"]));
                }
                if ((ds.Tables["TVessels"] != null)) {
                    base.Tables.Add(new TVesselsDataTable(ds.Tables["TVessels"]));
                }
                if ((ds.Tables["TFixtures"] != null)) {
                    base.Tables.Add(new TFixturesDataTable(ds.Tables["TFixtures"]));
                }
                if ((ds.Tables["TInvoiceDetails"] != null)) {
                    base.Tables.Add(new TInvoiceDetailsDataTable(ds.Tables["TInvoiceDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TSys_UsersDataTable TSys_Users {
            get {
                return this.tableTSys_Users;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TInvoicesDataTable TInvoices {
            get {
                return this.tableTInvoices;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TVesselsDataTable TVessels {
            get {
                return this.tableTVessels;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TFixturesDataTable TFixtures {
            get {
                return this.tableTFixtures;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TInvoiceDetailsDataTable TInvoiceDetails {
            get {
                return this.tableTInvoiceDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BMSDS cln = ((BMSDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TSys_Users"] != null)) {
                    base.Tables.Add(new TSys_UsersDataTable(ds.Tables["TSys_Users"]));
                }
                if ((ds.Tables["TInvoices"] != null)) {
                    base.Tables.Add(new TInvoicesDataTable(ds.Tables["TInvoices"]));
                }
                if ((ds.Tables["TVessels"] != null)) {
                    base.Tables.Add(new TVesselsDataTable(ds.Tables["TVessels"]));
                }
                if ((ds.Tables["TFixtures"] != null)) {
                    base.Tables.Add(new TFixturesDataTable(ds.Tables["TFixtures"]));
                }
                if ((ds.Tables["TInvoiceDetails"] != null)) {
                    base.Tables.Add(new TInvoiceDetailsDataTable(ds.Tables["TInvoiceDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTSys_Users = ((TSys_UsersDataTable)(base.Tables["TSys_Users"]));
            if ((initTable == true)) {
                if ((this.tableTSys_Users != null)) {
                    this.tableTSys_Users.InitVars();
                }
            }
            this.tableTInvoices = ((TInvoicesDataTable)(base.Tables["TInvoices"]));
            if ((initTable == true)) {
                if ((this.tableTInvoices != null)) {
                    this.tableTInvoices.InitVars();
                }
            }
            this.tableTVessels = ((TVesselsDataTable)(base.Tables["TVessels"]));
            if ((initTable == true)) {
                if ((this.tableTVessels != null)) {
                    this.tableTVessels.InitVars();
                }
            }
            this.tableTFixtures = ((TFixturesDataTable)(base.Tables["TFixtures"]));
            if ((initTable == true)) {
                if ((this.tableTFixtures != null)) {
                    this.tableTFixtures.InitVars();
                }
            }
            this.tableTInvoiceDetails = ((TInvoiceDetailsDataTable)(base.Tables["TInvoiceDetails"]));
            if ((initTable == true)) {
                if ((this.tableTInvoiceDetails != null)) {
                    this.tableTInvoiceDetails.InitVars();
                }
            }
            this.relationTFixtures_TInvoices = this.Relations["TFixtures_TInvoices"];
            this.relationTInvoices_TInvoiceDetails = this.Relations["TInvoices_TInvoiceDetails"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BMSDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BMSDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTSys_Users = new TSys_UsersDataTable();
            base.Tables.Add(this.tableTSys_Users);
            this.tableTInvoices = new TInvoicesDataTable();
            base.Tables.Add(this.tableTInvoices);
            this.tableTVessels = new TVesselsDataTable();
            base.Tables.Add(this.tableTVessels);
            this.tableTFixtures = new TFixturesDataTable();
            base.Tables.Add(this.tableTFixtures);
            this.tableTInvoiceDetails = new TInvoiceDetailsDataTable();
            base.Tables.Add(this.tableTInvoiceDetails);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("TFixtures_TInvoices", new global::System.Data.DataColumn[] {
                        this.tableTFixtures.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTInvoices.FIX_IDColumn});
            this.tableTInvoices.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.Cascade;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("TInvoices_TInvoiceDetails", new global::System.Data.DataColumn[] {
                        this.tableTInvoices.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTInvoiceDetails.INVOICE_IDColumn});
            this.tableTInvoiceDetails.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.Cascade;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationTFixtures_TInvoices = new global::System.Data.DataRelation("TFixtures_TInvoices", new global::System.Data.DataColumn[] {
                        this.tableTFixtures.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTInvoices.FIX_IDColumn}, false);
            this.Relations.Add(this.relationTFixtures_TInvoices);
            this.relationTInvoices_TInvoiceDetails = new global::System.Data.DataRelation("TInvoices_TInvoiceDetails", new global::System.Data.DataColumn[] {
                        this.tableTInvoices.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableTInvoiceDetails.INVOICE_IDColumn}, false);
            this.Relations.Add(this.relationTInvoices_TInvoiceDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTSys_Users() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTInvoices() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTVessels() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTFixtures() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTInvoiceDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BMSDS ds = new BMSDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TSys_UsersRowChangeEventHandler(object sender, TSys_UsersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TInvoicesRowChangeEventHandler(object sender, TInvoicesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TVesselsRowChangeEventHandler(object sender, TVesselsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TFixturesRowChangeEventHandler(object sender, TFixturesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TInvoiceDetailsRowChangeEventHandler(object sender, TInvoiceDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TSys_UsersDataTable : global::System.Data.TypedTableBase<TSys_UsersRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnPWD;
            
            private global::System.Data.DataColumn columnUSERTYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TSys_UsersDataTable() {
                this.TableName = "TSys_Users";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TSys_UsersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TSys_UsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PWDColumn {
                get {
                    return this.columnPWD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERTYPEColumn {
                get {
                    return this.columnUSERTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TSys_UsersRow this[int index] {
                get {
                    return ((TSys_UsersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TSys_UsersRowChangeEventHandler TSys_UsersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TSys_UsersRowChangeEventHandler TSys_UsersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TSys_UsersRowChangeEventHandler TSys_UsersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TSys_UsersRowChangeEventHandler TSys_UsersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTSys_UsersRow(TSys_UsersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TSys_UsersRow AddTSys_UsersRow(string ID, string NAME, string PWD, string USERTYPE) {
                TSys_UsersRow rowTSys_UsersRow = ((TSys_UsersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        NAME,
                        PWD,
                        USERTYPE};
                rowTSys_UsersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTSys_UsersRow);
                return rowTSys_UsersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TSys_UsersDataTable cln = ((TSys_UsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TSys_UsersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnPWD = base.Columns["PWD"];
                this.columnUSERTYPE = base.Columns["USERTYPE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnPWD = new global::System.Data.DataColumn("PWD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPWD);
                this.columnUSERTYPE = new global::System.Data.DataColumn("USERTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERTYPE);
                this.columnID.AllowDBNull = false;
                this.columnID.MaxLength = 2147483647;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 2147483647;
                this.columnPWD.AllowDBNull = false;
                this.columnPWD.MaxLength = 2147483647;
                this.columnUSERTYPE.AllowDBNull = false;
                this.columnUSERTYPE.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TSys_UsersRow NewTSys_UsersRow() {
                return ((TSys_UsersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TSys_UsersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TSys_UsersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TSys_UsersRowChanged != null)) {
                    this.TSys_UsersRowChanged(this, new TSys_UsersRowChangeEvent(((TSys_UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TSys_UsersRowChanging != null)) {
                    this.TSys_UsersRowChanging(this, new TSys_UsersRowChangeEvent(((TSys_UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TSys_UsersRowDeleted != null)) {
                    this.TSys_UsersRowDeleted(this, new TSys_UsersRowChangeEvent(((TSys_UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TSys_UsersRowDeleting != null)) {
                    this.TSys_UsersRowDeleting(this, new TSys_UsersRowChangeEvent(((TSys_UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTSys_UsersRow(TSys_UsersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BMSDS ds = new BMSDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TSys_UsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TInvoicesDataTable : global::System.Data.TypedTableBase<TInvoicesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnFIXNO;
            
            private global::System.Data.DataColumn columnREFNO;
            
            private global::System.Data.DataColumn columnMESSES;
            
            private global::System.Data.DataColumn columnVSL_ID;
            
            private global::System.Data.DataColumn columnCP_DATE;
            
            private global::System.Data.DataColumn columnCP_TYPE;
            
            private global::System.Data.DataColumn columnCP_DESC;
            
            private global::System.Data.DataColumn columnHRORFRT;
            
            private global::System.Data.DataColumn columnDAYSORMT;
            
            private global::System.Data.DataColumn columnATIN;
            
            private global::System.Data.DataColumn columnCWNO;
            
            private global::System.Data.DataColumn columnBRKRATE_OWR;
            
            private global::System.Data.DataColumn columnBRKAMOUNT_OWR;
            
            private global::System.Data.DataColumn columnCHR;
            
            private global::System.Data.DataColumn columnBRKRATE_CHR;
            
            private global::System.Data.DataColumn columnBRKAMOUNT_CHR;
            
            private global::System.Data.DataColumn columnPERIODS;
            
            private global::System.Data.DataColumn columnBANKACCOUNT;
            
            private global::System.Data.DataColumn columnRECEIVABLEAMOUNT;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnOPER;
            
            private global::System.Data.DataColumn columnOWR;
            
            private global::System.Data.DataColumn columnRECEIVABLEDATE;
            
            private global::System.Data.DataColumn columnOP_DT;
            
            private global::System.Data.DataColumn columnINVOICE_DATE;
            
            private global::System.Data.DataColumn columnFIX_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoicesDataTable() {
                this.TableName = "TInvoices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TInvoicesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TInvoicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIXNOColumn {
                get {
                    return this.columnFIXNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REFNOColumn {
                get {
                    return this.columnREFNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MESSESColumn {
                get {
                    return this.columnMESSES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VSL_IDColumn {
                get {
                    return this.columnVSL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CP_DATEColumn {
                get {
                    return this.columnCP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CP_TYPEColumn {
                get {
                    return this.columnCP_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CP_DESCColumn {
                get {
                    return this.columnCP_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HRORFRTColumn {
                get {
                    return this.columnHRORFRT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DAYSORMTColumn {
                get {
                    return this.columnDAYSORMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ATINColumn {
                get {
                    return this.columnATIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CWNOColumn {
                get {
                    return this.columnCWNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRKRATE_OWRColumn {
                get {
                    return this.columnBRKRATE_OWR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRKAMOUNT_OWRColumn {
                get {
                    return this.columnBRKAMOUNT_OWR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHRColumn {
                get {
                    return this.columnCHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRKRATE_CHRColumn {
                get {
                    return this.columnBRKRATE_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRKAMOUNT_CHRColumn {
                get {
                    return this.columnBRKAMOUNT_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PERIODSColumn {
                get {
                    return this.columnPERIODS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BANKACCOUNTColumn {
                get {
                    return this.columnBANKACCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECEIVABLEAMOUNTColumn {
                get {
                    return this.columnRECEIVABLEAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERColumn {
                get {
                    return this.columnOPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OWRColumn {
                get {
                    return this.columnOWR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECEIVABLEDATEColumn {
                get {
                    return this.columnRECEIVABLEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OP_DTColumn {
                get {
                    return this.columnOP_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVOICE_DATEColumn {
                get {
                    return this.columnINVOICE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIX_IDColumn {
                get {
                    return this.columnFIX_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoicesRow this[int index] {
                get {
                    return ((TInvoicesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TInvoicesRowChangeEventHandler TInvoicesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TInvoicesRowChangeEventHandler TInvoicesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TInvoicesRowChangeEventHandler TInvoicesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TInvoicesRowChangeEventHandler TInvoicesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTInvoicesRow(TInvoicesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoicesRow AddTInvoicesRow(
                        string FIXNO, 
                        string REFNO, 
                        string MESSES, 
                        int VSL_ID, 
                        System.DateTimeOffset CP_DATE, 
                        string CP_TYPE, 
                        string CP_DESC, 
                        decimal HRORFRT, 
                        decimal DAYSORMT, 
                        string ATIN, 
                        string CWNO, 
                        decimal BRKRATE_OWR, 
                        decimal BRKAMOUNT_OWR, 
                        string CHR, 
                        decimal BRKRATE_CHR, 
                        decimal BRKAMOUNT_CHR, 
                        string PERIODS, 
                        string BANKACCOUNT, 
                        decimal RECEIVABLEAMOUNT, 
                        string STATUS, 
                        string REMARK, 
                        string OPER, 
                        string OWR, 
                        System.DateTimeOffset RECEIVABLEDATE, 
                        System.DateTimeOffset OP_DT, 
                        System.DateTimeOffset INVOICE_DATE, 
                        TFixturesRow parentTFixturesRowByTFixtures_TInvoices) {
                TInvoicesRow rowTInvoicesRow = ((TInvoicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FIXNO,
                        REFNO,
                        MESSES,
                        VSL_ID,
                        CP_DATE,
                        CP_TYPE,
                        CP_DESC,
                        HRORFRT,
                        DAYSORMT,
                        ATIN,
                        CWNO,
                        BRKRATE_OWR,
                        BRKAMOUNT_OWR,
                        CHR,
                        BRKRATE_CHR,
                        BRKAMOUNT_CHR,
                        PERIODS,
                        BANKACCOUNT,
                        RECEIVABLEAMOUNT,
                        STATUS,
                        REMARK,
                        OPER,
                        OWR,
                        RECEIVABLEDATE,
                        OP_DT,
                        INVOICE_DATE,
                        null};
                if ((parentTFixturesRowByTFixtures_TInvoices != null)) {
                    columnValuesArray[27] = parentTFixturesRowByTFixtures_TInvoices[0];
                }
                rowTInvoicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTInvoicesRow);
                return rowTInvoicesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoicesRow FindByID(int ID) {
                return ((TInvoicesRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TInvoicesDataTable cln = ((TInvoicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TInvoicesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnFIXNO = base.Columns["FIXNO"];
                this.columnREFNO = base.Columns["REFNO"];
                this.columnMESSES = base.Columns["MESSES"];
                this.columnVSL_ID = base.Columns["VSL_ID"];
                this.columnCP_DATE = base.Columns["CP_DATE"];
                this.columnCP_TYPE = base.Columns["CP_TYPE"];
                this.columnCP_DESC = base.Columns["CP_DESC"];
                this.columnHRORFRT = base.Columns["HRORFRT"];
                this.columnDAYSORMT = base.Columns["DAYSORMT"];
                this.columnATIN = base.Columns["ATIN"];
                this.columnCWNO = base.Columns["CWNO"];
                this.columnBRKRATE_OWR = base.Columns["BRKRATE_OWR"];
                this.columnBRKAMOUNT_OWR = base.Columns["BRKAMOUNT_OWR"];
                this.columnCHR = base.Columns["CHR"];
                this.columnBRKRATE_CHR = base.Columns["BRKRATE_CHR"];
                this.columnBRKAMOUNT_CHR = base.Columns["BRKAMOUNT_CHR"];
                this.columnPERIODS = base.Columns["PERIODS"];
                this.columnBANKACCOUNT = base.Columns["BANKACCOUNT"];
                this.columnRECEIVABLEAMOUNT = base.Columns["RECEIVABLEAMOUNT"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnOPER = base.Columns["OPER"];
                this.columnOWR = base.Columns["OWR"];
                this.columnRECEIVABLEDATE = base.Columns["RECEIVABLEDATE"];
                this.columnOP_DT = base.Columns["OP_DT"];
                this.columnINVOICE_DATE = base.Columns["INVOICE_DATE"];
                this.columnFIX_ID = base.Columns["FIX_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnFIXNO = new global::System.Data.DataColumn("FIXNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXNO);
                this.columnREFNO = new global::System.Data.DataColumn("REFNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFNO);
                this.columnMESSES = new global::System.Data.DataColumn("MESSES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMESSES);
                this.columnVSL_ID = new global::System.Data.DataColumn("VSL_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVSL_ID);
                this.columnCP_DATE = new global::System.Data.DataColumn("CP_DATE", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCP_DATE);
                this.columnCP_TYPE = new global::System.Data.DataColumn("CP_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCP_TYPE);
                this.columnCP_DESC = new global::System.Data.DataColumn("CP_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCP_DESC);
                this.columnHRORFRT = new global::System.Data.DataColumn("HRORFRT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRORFRT);
                this.columnDAYSORMT = new global::System.Data.DataColumn("DAYSORMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYSORMT);
                this.columnATIN = new global::System.Data.DataColumn("ATIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATIN);
                this.columnCWNO = new global::System.Data.DataColumn("CWNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCWNO);
                this.columnBRKRATE_OWR = new global::System.Data.DataColumn("BRKRATE_OWR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRKRATE_OWR);
                this.columnBRKAMOUNT_OWR = new global::System.Data.DataColumn("BRKAMOUNT_OWR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRKAMOUNT_OWR);
                this.columnCHR = new global::System.Data.DataColumn("CHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHR);
                this.columnBRKRATE_CHR = new global::System.Data.DataColumn("BRKRATE_CHR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRKRATE_CHR);
                this.columnBRKAMOUNT_CHR = new global::System.Data.DataColumn("BRKAMOUNT_CHR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRKAMOUNT_CHR);
                this.columnPERIODS = new global::System.Data.DataColumn("PERIODS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERIODS);
                this.columnBANKACCOUNT = new global::System.Data.DataColumn("BANKACCOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANKACCOUNT);
                this.columnRECEIVABLEAMOUNT = new global::System.Data.DataColumn("RECEIVABLEAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIVABLEAMOUNT);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnOPER = new global::System.Data.DataColumn("OPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER);
                this.columnOWR = new global::System.Data.DataColumn("OWR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOWR);
                this.columnRECEIVABLEDATE = new global::System.Data.DataColumn("RECEIVABLEDATE", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIVABLEDATE);
                this.columnOP_DT = new global::System.Data.DataColumn("OP_DT", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_DT);
                this.columnINVOICE_DATE = new global::System.Data.DataColumn("INVOICE_DATE", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVOICE_DATE);
                this.columnFIX_ID = new global::System.Data.DataColumn("FIX_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIX_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnFIXNO.AllowDBNull = false;
                this.columnFIXNO.MaxLength = 2147483647;
                this.columnREFNO.AllowDBNull = false;
                this.columnREFNO.MaxLength = 2147483647;
                this.columnMESSES.AllowDBNull = false;
                this.columnMESSES.MaxLength = 2147483647;
                this.columnVSL_ID.AllowDBNull = false;
                this.columnCP_DATE.AllowDBNull = false;
                this.columnCP_TYPE.AllowDBNull = false;
                this.columnCP_TYPE.MaxLength = 2147483647;
                this.columnCP_DESC.AllowDBNull = false;
                this.columnCP_DESC.MaxLength = 2147483647;
                this.columnHRORFRT.AllowDBNull = false;
                this.columnDAYSORMT.AllowDBNull = false;
                this.columnATIN.AllowDBNull = false;
                this.columnATIN.MaxLength = 2147483647;
                this.columnCWNO.AllowDBNull = false;
                this.columnCWNO.MaxLength = 2147483647;
                this.columnBRKRATE_OWR.AllowDBNull = false;
                this.columnBRKAMOUNT_OWR.AllowDBNull = false;
                this.columnCHR.AllowDBNull = false;
                this.columnCHR.MaxLength = 2147483647;
                this.columnBRKRATE_CHR.AllowDBNull = false;
                this.columnBRKAMOUNT_CHR.AllowDBNull = false;
                this.columnPERIODS.AllowDBNull = false;
                this.columnPERIODS.MaxLength = 2147483647;
                this.columnBANKACCOUNT.AllowDBNull = false;
                this.columnBANKACCOUNT.MaxLength = 2147483647;
                this.columnRECEIVABLEAMOUNT.AllowDBNull = false;
                this.columnSTATUS.AllowDBNull = false;
                this.columnSTATUS.MaxLength = 2147483647;
                this.columnREMARK.AllowDBNull = false;
                this.columnREMARK.MaxLength = 2147483647;
                this.columnOPER.AllowDBNull = false;
                this.columnOPER.MaxLength = 2147483647;
                this.columnOWR.AllowDBNull = false;
                this.columnOWR.MaxLength = 2147483647;
                this.columnRECEIVABLEDATE.AllowDBNull = false;
                this.columnOP_DT.AllowDBNull = false;
                this.columnINVOICE_DATE.AllowDBNull = false;
                this.columnFIX_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoicesRow NewTInvoicesRow() {
                return ((TInvoicesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TInvoicesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TInvoicesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TInvoicesRowChanged != null)) {
                    this.TInvoicesRowChanged(this, new TInvoicesRowChangeEvent(((TInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TInvoicesRowChanging != null)) {
                    this.TInvoicesRowChanging(this, new TInvoicesRowChangeEvent(((TInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TInvoicesRowDeleted != null)) {
                    this.TInvoicesRowDeleted(this, new TInvoicesRowChangeEvent(((TInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TInvoicesRowDeleting != null)) {
                    this.TInvoicesRowDeleting(this, new TInvoicesRowChangeEvent(((TInvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTInvoicesRow(TInvoicesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BMSDS ds = new BMSDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TInvoicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TVesselsDataTable : global::System.Data.TypedTableBase<TVesselsRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnSIZE;
            
            private global::System.Data.DataColumn columnDESC;
            
            private global::System.Data.DataColumn columnOPER;
            
            private global::System.Data.DataColumn columnOP_DT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TVesselsDataTable() {
                this.TableName = "TVessels";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TVesselsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TVesselsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SIZEColumn {
                get {
                    return this.columnSIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCColumn {
                get {
                    return this.columnDESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERColumn {
                get {
                    return this.columnOPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OP_DTColumn {
                get {
                    return this.columnOP_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TVesselsRow this[int index] {
                get {
                    return ((TVesselsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TVesselsRowChangeEventHandler TVesselsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TVesselsRowChangeEventHandler TVesselsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TVesselsRowChangeEventHandler TVesselsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TVesselsRowChangeEventHandler TVesselsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTVesselsRow(TVesselsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TVesselsRow AddTVesselsRow(string NAME, string SIZE, string DESC, string OPER, System.DateTimeOffset OP_DT) {
                TVesselsRow rowTVesselsRow = ((TVesselsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME,
                        SIZE,
                        DESC,
                        OPER,
                        OP_DT};
                rowTVesselsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTVesselsRow);
                return rowTVesselsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TVesselsRow FindByID(int ID) {
                return ((TVesselsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TVesselsDataTable cln = ((TVesselsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TVesselsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSIZE = base.Columns["SIZE"];
                this.columnDESC = base.Columns["DESC"];
                this.columnOPER = base.Columns["OPER"];
                this.columnOP_DT = base.Columns["OP_DT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSIZE = new global::System.Data.DataColumn("SIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIZE);
                this.columnDESC = new global::System.Data.DataColumn("DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESC);
                this.columnOPER = new global::System.Data.DataColumn("OPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER);
                this.columnOP_DT = new global::System.Data.DataColumn("OP_DT", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_DT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 2147483647;
                this.columnSIZE.AllowDBNull = false;
                this.columnSIZE.MaxLength = 2147483647;
                this.columnDESC.AllowDBNull = false;
                this.columnDESC.MaxLength = 2147483647;
                this.columnOPER.AllowDBNull = false;
                this.columnOPER.MaxLength = 2147483647;
                this.columnOP_DT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TVesselsRow NewTVesselsRow() {
                return ((TVesselsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TVesselsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TVesselsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TVesselsRowChanged != null)) {
                    this.TVesselsRowChanged(this, new TVesselsRowChangeEvent(((TVesselsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TVesselsRowChanging != null)) {
                    this.TVesselsRowChanging(this, new TVesselsRowChangeEvent(((TVesselsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TVesselsRowDeleted != null)) {
                    this.TVesselsRowDeleted(this, new TVesselsRowChangeEvent(((TVesselsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TVesselsRowDeleting != null)) {
                    this.TVesselsRowDeleting(this, new TVesselsRowChangeEvent(((TVesselsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTVesselsRow(TVesselsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BMSDS ds = new BMSDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TVesselsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TFixturesDataTable : global::System.Data.TypedTableBase<TFixturesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnVSL_ID;
            
            private global::System.Data.DataColumn columnCP_DATE;
            
            private global::System.Data.DataColumn columnCP_TYPE;
            
            private global::System.Data.DataColumn columnCP_DESC;
            
            private global::System.Data.DataColumn columnPAYER;
            
            private global::System.Data.DataColumn columnHRORFRT;
            
            private global::System.Data.DataColumn columnDAYSORMT;
            
            private global::System.Data.DataColumn columnOWR;
            
            private global::System.Data.DataColumn columnBRKRATE_OWR;
            
            private global::System.Data.DataColumn columnBRKAMOUNT_OWR;
            
            private global::System.Data.DataColumn columnCHR;
            
            private global::System.Data.DataColumn columnBRKRATE_CHR;
            
            private global::System.Data.DataColumn columnBRKAMOUNT_CHR;
            
            private global::System.Data.DataColumn columnESTBRK;
            
            private global::System.Data.DataColumn columnBROKER1;
            
            private global::System.Data.DataColumn columnBROKER2;
            
            private global::System.Data.DataColumn columnSIGNOPER;
            
            private global::System.Data.DataColumn columnCAP_RATE;
            
            private global::System.Data.DataColumn columnCAP_AMOUNT;
            
            private global::System.Data.DataColumn columnTFCB;
            
            private global::System.Data.DataColumn columnFIXNO;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnOPER;
            
            private global::System.Data.DataColumn columnOP_DT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TFixturesDataTable() {
                this.TableName = "TFixtures";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TFixturesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TFixturesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VSL_IDColumn {
                get {
                    return this.columnVSL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CP_DATEColumn {
                get {
                    return this.columnCP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CP_TYPEColumn {
                get {
                    return this.columnCP_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CP_DESCColumn {
                get {
                    return this.columnCP_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAYERColumn {
                get {
                    return this.columnPAYER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HRORFRTColumn {
                get {
                    return this.columnHRORFRT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DAYSORMTColumn {
                get {
                    return this.columnDAYSORMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OWRColumn {
                get {
                    return this.columnOWR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRKRATE_OWRColumn {
                get {
                    return this.columnBRKRATE_OWR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRKAMOUNT_OWRColumn {
                get {
                    return this.columnBRKAMOUNT_OWR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHRColumn {
                get {
                    return this.columnCHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRKRATE_CHRColumn {
                get {
                    return this.columnBRKRATE_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRKAMOUNT_CHRColumn {
                get {
                    return this.columnBRKAMOUNT_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ESTBRKColumn {
                get {
                    return this.columnESTBRK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BROKER1Column {
                get {
                    return this.columnBROKER1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BROKER2Column {
                get {
                    return this.columnBROKER2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SIGNOPERColumn {
                get {
                    return this.columnSIGNOPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAP_RATEColumn {
                get {
                    return this.columnCAP_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAP_AMOUNTColumn {
                get {
                    return this.columnCAP_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TFCBColumn {
                get {
                    return this.columnTFCB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIXNOColumn {
                get {
                    return this.columnFIXNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERColumn {
                get {
                    return this.columnOPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OP_DTColumn {
                get {
                    return this.columnOP_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TFixturesRow this[int index] {
                get {
                    return ((TFixturesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TFixturesRowChangeEventHandler TFixturesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TFixturesRowChangeEventHandler TFixturesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TFixturesRowChangeEventHandler TFixturesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TFixturesRowChangeEventHandler TFixturesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTFixturesRow(TFixturesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TFixturesRow AddTFixturesRow(
                        int VSL_ID, 
                        System.DateTimeOffset CP_DATE, 
                        string CP_TYPE, 
                        string CP_DESC, 
                        string PAYER, 
                        decimal HRORFRT, 
                        decimal DAYSORMT, 
                        string OWR, 
                        decimal BRKRATE_OWR, 
                        decimal BRKAMOUNT_OWR, 
                        string CHR, 
                        decimal BRKRATE_CHR, 
                        decimal BRKAMOUNT_CHR, 
                        decimal ESTBRK, 
                        string BROKER1, 
                        string BROKER2, 
                        string SIGNOPER, 
                        decimal CAP_RATE, 
                        decimal CAP_AMOUNT, 
                        int TFCB, 
                        string FIXNO, 
                        string STATUS, 
                        string REMARK, 
                        string OPER, 
                        System.DateTimeOffset OP_DT) {
                TFixturesRow rowTFixturesRow = ((TFixturesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        VSL_ID,
                        CP_DATE,
                        CP_TYPE,
                        CP_DESC,
                        PAYER,
                        HRORFRT,
                        DAYSORMT,
                        OWR,
                        BRKRATE_OWR,
                        BRKAMOUNT_OWR,
                        CHR,
                        BRKRATE_CHR,
                        BRKAMOUNT_CHR,
                        ESTBRK,
                        BROKER1,
                        BROKER2,
                        SIGNOPER,
                        CAP_RATE,
                        CAP_AMOUNT,
                        TFCB,
                        FIXNO,
                        STATUS,
                        REMARK,
                        OPER,
                        OP_DT};
                rowTFixturesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTFixturesRow);
                return rowTFixturesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TFixturesRow FindByID(int ID) {
                return ((TFixturesRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TFixturesDataTable cln = ((TFixturesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TFixturesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnVSL_ID = base.Columns["VSL_ID"];
                this.columnCP_DATE = base.Columns["CP_DATE"];
                this.columnCP_TYPE = base.Columns["CP_TYPE"];
                this.columnCP_DESC = base.Columns["CP_DESC"];
                this.columnPAYER = base.Columns["PAYER"];
                this.columnHRORFRT = base.Columns["HRORFRT"];
                this.columnDAYSORMT = base.Columns["DAYSORMT"];
                this.columnOWR = base.Columns["OWR"];
                this.columnBRKRATE_OWR = base.Columns["BRKRATE_OWR"];
                this.columnBRKAMOUNT_OWR = base.Columns["BRKAMOUNT_OWR"];
                this.columnCHR = base.Columns["CHR"];
                this.columnBRKRATE_CHR = base.Columns["BRKRATE_CHR"];
                this.columnBRKAMOUNT_CHR = base.Columns["BRKAMOUNT_CHR"];
                this.columnESTBRK = base.Columns["ESTBRK"];
                this.columnBROKER1 = base.Columns["BROKER1"];
                this.columnBROKER2 = base.Columns["BROKER2"];
                this.columnSIGNOPER = base.Columns["SIGNOPER"];
                this.columnCAP_RATE = base.Columns["CAP_RATE"];
                this.columnCAP_AMOUNT = base.Columns["CAP_AMOUNT"];
                this.columnTFCB = base.Columns["TFCB"];
                this.columnFIXNO = base.Columns["FIXNO"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnOPER = base.Columns["OPER"];
                this.columnOP_DT = base.Columns["OP_DT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnVSL_ID = new global::System.Data.DataColumn("VSL_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVSL_ID);
                this.columnCP_DATE = new global::System.Data.DataColumn("CP_DATE", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCP_DATE);
                this.columnCP_TYPE = new global::System.Data.DataColumn("CP_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCP_TYPE);
                this.columnCP_DESC = new global::System.Data.DataColumn("CP_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCP_DESC);
                this.columnPAYER = new global::System.Data.DataColumn("PAYER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYER);
                this.columnHRORFRT = new global::System.Data.DataColumn("HRORFRT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRORFRT);
                this.columnDAYSORMT = new global::System.Data.DataColumn("DAYSORMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYSORMT);
                this.columnOWR = new global::System.Data.DataColumn("OWR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOWR);
                this.columnBRKRATE_OWR = new global::System.Data.DataColumn("BRKRATE_OWR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRKRATE_OWR);
                this.columnBRKAMOUNT_OWR = new global::System.Data.DataColumn("BRKAMOUNT_OWR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRKAMOUNT_OWR);
                this.columnCHR = new global::System.Data.DataColumn("CHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHR);
                this.columnBRKRATE_CHR = new global::System.Data.DataColumn("BRKRATE_CHR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRKRATE_CHR);
                this.columnBRKAMOUNT_CHR = new global::System.Data.DataColumn("BRKAMOUNT_CHR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRKAMOUNT_CHR);
                this.columnESTBRK = new global::System.Data.DataColumn("ESTBRK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTBRK);
                this.columnBROKER1 = new global::System.Data.DataColumn("BROKER1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBROKER1);
                this.columnBROKER2 = new global::System.Data.DataColumn("BROKER2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBROKER2);
                this.columnSIGNOPER = new global::System.Data.DataColumn("SIGNOPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIGNOPER);
                this.columnCAP_RATE = new global::System.Data.DataColumn("CAP_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAP_RATE);
                this.columnCAP_AMOUNT = new global::System.Data.DataColumn("CAP_AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAP_AMOUNT);
                this.columnTFCB = new global::System.Data.DataColumn("TFCB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTFCB);
                this.columnFIXNO = new global::System.Data.DataColumn("FIXNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXNO);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnOPER = new global::System.Data.DataColumn("OPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER);
                this.columnOP_DT = new global::System.Data.DataColumn("OP_DT", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_DT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnVSL_ID.AllowDBNull = false;
                this.columnCP_DATE.AllowDBNull = false;
                this.columnCP_TYPE.AllowDBNull = false;
                this.columnCP_TYPE.MaxLength = 2147483647;
                this.columnCP_DESC.AllowDBNull = false;
                this.columnCP_DESC.MaxLength = 2147483647;
                this.columnPAYER.AllowDBNull = false;
                this.columnPAYER.MaxLength = 2147483647;
                this.columnHRORFRT.AllowDBNull = false;
                this.columnDAYSORMT.AllowDBNull = false;
                this.columnOWR.AllowDBNull = false;
                this.columnOWR.MaxLength = 2147483647;
                this.columnBRKRATE_OWR.AllowDBNull = false;
                this.columnBRKAMOUNT_OWR.AllowDBNull = false;
                this.columnCHR.AllowDBNull = false;
                this.columnCHR.MaxLength = 2147483647;
                this.columnBRKRATE_CHR.AllowDBNull = false;
                this.columnBRKAMOUNT_CHR.AllowDBNull = false;
                this.columnESTBRK.AllowDBNull = false;
                this.columnBROKER1.AllowDBNull = false;
                this.columnBROKER1.MaxLength = 2147483647;
                this.columnBROKER2.AllowDBNull = false;
                this.columnBROKER2.MaxLength = 2147483647;
                this.columnSIGNOPER.AllowDBNull = false;
                this.columnSIGNOPER.MaxLength = 2147483647;
                this.columnCAP_RATE.AllowDBNull = false;
                this.columnCAP_AMOUNT.AllowDBNull = false;
                this.columnTFCB.AllowDBNull = false;
                this.columnFIXNO.AllowDBNull = false;
                this.columnFIXNO.MaxLength = 2147483647;
                this.columnSTATUS.AllowDBNull = false;
                this.columnSTATUS.MaxLength = 2147483647;
                this.columnREMARK.AllowDBNull = false;
                this.columnREMARK.MaxLength = 2147483647;
                this.columnOPER.AllowDBNull = false;
                this.columnOPER.MaxLength = 2147483647;
                this.columnOP_DT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TFixturesRow NewTFixturesRow() {
                return ((TFixturesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TFixturesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TFixturesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TFixturesRowChanged != null)) {
                    this.TFixturesRowChanged(this, new TFixturesRowChangeEvent(((TFixturesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TFixturesRowChanging != null)) {
                    this.TFixturesRowChanging(this, new TFixturesRowChangeEvent(((TFixturesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TFixturesRowDeleted != null)) {
                    this.TFixturesRowDeleted(this, new TFixturesRowChangeEvent(((TFixturesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TFixturesRowDeleting != null)) {
                    this.TFixturesRowDeleting(this, new TFixturesRowChangeEvent(((TFixturesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTFixturesRow(TFixturesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BMSDS ds = new BMSDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TFixturesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TInvoiceDetailsDataTable : global::System.Data.TypedTableBase<TInvoiceDetailsRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnC1;
            
            private global::System.Data.DataColumn columnC2;
            
            private global::System.Data.DataColumn columnC3;
            
            private global::System.Data.DataColumn columnC4;
            
            private global::System.Data.DataColumn columnC5;
            
            private global::System.Data.DataColumn columnOPER;
            
            private global::System.Data.DataColumn columnOP_DT;
            
            private global::System.Data.DataColumn columnINVOICE_ID;
            
            private global::System.Data.DataColumn columnDEBIT;
            
            private global::System.Data.DataColumn columnCREDIT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoiceDetailsDataTable() {
                this.TableName = "TInvoiceDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TInvoiceDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TInvoiceDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C1Column {
                get {
                    return this.columnC1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C2Column {
                get {
                    return this.columnC2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C3Column {
                get {
                    return this.columnC3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C4Column {
                get {
                    return this.columnC4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn C5Column {
                get {
                    return this.columnC5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERColumn {
                get {
                    return this.columnOPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OP_DTColumn {
                get {
                    return this.columnOP_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVOICE_IDColumn {
                get {
                    return this.columnINVOICE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEBITColumn {
                get {
                    return this.columnDEBIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREDITColumn {
                get {
                    return this.columnCREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoiceDetailsRow this[int index] {
                get {
                    return ((TInvoiceDetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TInvoiceDetailsRowChangeEventHandler TInvoiceDetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TInvoiceDetailsRowChangeEventHandler TInvoiceDetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TInvoiceDetailsRowChangeEventHandler TInvoiceDetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TInvoiceDetailsRowChangeEventHandler TInvoiceDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTInvoiceDetailsRow(TInvoiceDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoiceDetailsRow AddTInvoiceDetailsRow(string C1, string C2, string C3, string C4, string C5, string OPER, System.DateTimeOffset OP_DT, TInvoicesRow parentTInvoicesRowByTInvoices_TInvoiceDetails, decimal DEBIT, decimal CREDIT) {
                TInvoiceDetailsRow rowTInvoiceDetailsRow = ((TInvoiceDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        C1,
                        C2,
                        C3,
                        C4,
                        C5,
                        OPER,
                        OP_DT,
                        null,
                        DEBIT,
                        CREDIT};
                if ((parentTInvoicesRowByTInvoices_TInvoiceDetails != null)) {
                    columnValuesArray[8] = parentTInvoicesRowByTInvoices_TInvoiceDetails[0];
                }
                rowTInvoiceDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTInvoiceDetailsRow);
                return rowTInvoiceDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoiceDetailsRow FindByID(int ID) {
                return ((TInvoiceDetailsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TInvoiceDetailsDataTable cln = ((TInvoiceDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TInvoiceDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnC1 = base.Columns["C1"];
                this.columnC2 = base.Columns["C2"];
                this.columnC3 = base.Columns["C3"];
                this.columnC4 = base.Columns["C4"];
                this.columnC5 = base.Columns["C5"];
                this.columnOPER = base.Columns["OPER"];
                this.columnOP_DT = base.Columns["OP_DT"];
                this.columnINVOICE_ID = base.Columns["INVOICE_ID"];
                this.columnDEBIT = base.Columns["DEBIT"];
                this.columnCREDIT = base.Columns["CREDIT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnC1 = new global::System.Data.DataColumn("C1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1);
                this.columnC2 = new global::System.Data.DataColumn("C2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2);
                this.columnC3 = new global::System.Data.DataColumn("C3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC3);
                this.columnC4 = new global::System.Data.DataColumn("C4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC4);
                this.columnC5 = new global::System.Data.DataColumn("C5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC5);
                this.columnOPER = new global::System.Data.DataColumn("OPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER);
                this.columnOP_DT = new global::System.Data.DataColumn("OP_DT", typeof(global::System.DateTimeOffset), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP_DT);
                this.columnINVOICE_ID = new global::System.Data.DataColumn("INVOICE_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVOICE_ID);
                this.columnDEBIT = new global::System.Data.DataColumn("DEBIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEBIT);
                this.columnCREDIT = new global::System.Data.DataColumn("CREDIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREDIT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnC1.AllowDBNull = false;
                this.columnC1.MaxLength = 2147483647;
                this.columnC2.AllowDBNull = false;
                this.columnC2.MaxLength = 2147483647;
                this.columnC3.AllowDBNull = false;
                this.columnC3.MaxLength = 2147483647;
                this.columnC4.AllowDBNull = false;
                this.columnC4.MaxLength = 2147483647;
                this.columnC5.AllowDBNull = false;
                this.columnC5.MaxLength = 2147483647;
                this.columnOPER.AllowDBNull = false;
                this.columnOPER.MaxLength = 2147483647;
                this.columnOP_DT.AllowDBNull = false;
                this.columnINVOICE_ID.AllowDBNull = false;
                this.columnDEBIT.AllowDBNull = false;
                this.columnCREDIT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoiceDetailsRow NewTInvoiceDetailsRow() {
                return ((TInvoiceDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TInvoiceDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TInvoiceDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TInvoiceDetailsRowChanged != null)) {
                    this.TInvoiceDetailsRowChanged(this, new TInvoiceDetailsRowChangeEvent(((TInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TInvoiceDetailsRowChanging != null)) {
                    this.TInvoiceDetailsRowChanging(this, new TInvoiceDetailsRowChangeEvent(((TInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TInvoiceDetailsRowDeleted != null)) {
                    this.TInvoiceDetailsRowDeleted(this, new TInvoiceDetailsRowChangeEvent(((TInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TInvoiceDetailsRowDeleting != null)) {
                    this.TInvoiceDetailsRowDeleting(this, new TInvoiceDetailsRowChangeEvent(((TInvoiceDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTInvoiceDetailsRow(TInvoiceDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BMSDS ds = new BMSDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TInvoiceDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TSys_UsersRow : global::System.Data.DataRow {
            
            private TSys_UsersDataTable tableTSys_Users;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TSys_UsersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTSys_Users = ((TSys_UsersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ID {
                get {
                    return ((string)(this[this.tableTSys_Users.IDColumn]));
                }
                set {
                    this[this.tableTSys_Users.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME {
                get {
                    return ((string)(this[this.tableTSys_Users.NAMEColumn]));
                }
                set {
                    this[this.tableTSys_Users.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PWD {
                get {
                    return ((string)(this[this.tableTSys_Users.PWDColumn]));
                }
                set {
                    this[this.tableTSys_Users.PWDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string USERTYPE {
                get {
                    return ((string)(this[this.tableTSys_Users.USERTYPEColumn]));
                }
                set {
                    this[this.tableTSys_Users.USERTYPEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TInvoicesRow : global::System.Data.DataRow {
            
            private TInvoicesDataTable tableTInvoices;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TInvoicesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTInvoices = ((TInvoicesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableTInvoices.IDColumn]));
                }
                set {
                    this[this.tableTInvoices.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIXNO {
                get {
                    return ((string)(this[this.tableTInvoices.FIXNOColumn]));
                }
                set {
                    this[this.tableTInvoices.FIXNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REFNO {
                get {
                    return ((string)(this[this.tableTInvoices.REFNOColumn]));
                }
                set {
                    this[this.tableTInvoices.REFNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MESSES {
                get {
                    return ((string)(this[this.tableTInvoices.MESSESColumn]));
                }
                set {
                    this[this.tableTInvoices.MESSESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VSL_ID {
                get {
                    return ((int)(this[this.tableTInvoices.VSL_IDColumn]));
                }
                set {
                    this[this.tableTInvoices.VSL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTimeOffset CP_DATE {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableTInvoices.CP_DATEColumn]));
                }
                set {
                    this[this.tableTInvoices.CP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CP_TYPE {
                get {
                    return ((string)(this[this.tableTInvoices.CP_TYPEColumn]));
                }
                set {
                    this[this.tableTInvoices.CP_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CP_DESC {
                get {
                    return ((string)(this[this.tableTInvoices.CP_DESCColumn]));
                }
                set {
                    this[this.tableTInvoices.CP_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HRORFRT {
                get {
                    return ((decimal)(this[this.tableTInvoices.HRORFRTColumn]));
                }
                set {
                    this[this.tableTInvoices.HRORFRTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DAYSORMT {
                get {
                    return ((decimal)(this[this.tableTInvoices.DAYSORMTColumn]));
                }
                set {
                    this[this.tableTInvoices.DAYSORMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ATIN {
                get {
                    return ((string)(this[this.tableTInvoices.ATINColumn]));
                }
                set {
                    this[this.tableTInvoices.ATINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CWNO {
                get {
                    return ((string)(this[this.tableTInvoices.CWNOColumn]));
                }
                set {
                    this[this.tableTInvoices.CWNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BRKRATE_OWR {
                get {
                    return ((decimal)(this[this.tableTInvoices.BRKRATE_OWRColumn]));
                }
                set {
                    this[this.tableTInvoices.BRKRATE_OWRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BRKAMOUNT_OWR {
                get {
                    return ((decimal)(this[this.tableTInvoices.BRKAMOUNT_OWRColumn]));
                }
                set {
                    this[this.tableTInvoices.BRKAMOUNT_OWRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHR {
                get {
                    return ((string)(this[this.tableTInvoices.CHRColumn]));
                }
                set {
                    this[this.tableTInvoices.CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BRKRATE_CHR {
                get {
                    return ((decimal)(this[this.tableTInvoices.BRKRATE_CHRColumn]));
                }
                set {
                    this[this.tableTInvoices.BRKRATE_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BRKAMOUNT_CHR {
                get {
                    return ((decimal)(this[this.tableTInvoices.BRKAMOUNT_CHRColumn]));
                }
                set {
                    this[this.tableTInvoices.BRKAMOUNT_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PERIODS {
                get {
                    return ((string)(this[this.tableTInvoices.PERIODSColumn]));
                }
                set {
                    this[this.tableTInvoices.PERIODSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BANKACCOUNT {
                get {
                    return ((string)(this[this.tableTInvoices.BANKACCOUNTColumn]));
                }
                set {
                    this[this.tableTInvoices.BANKACCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RECEIVABLEAMOUNT {
                get {
                    return ((decimal)(this[this.tableTInvoices.RECEIVABLEAMOUNTColumn]));
                }
                set {
                    this[this.tableTInvoices.RECEIVABLEAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATUS {
                get {
                    return ((string)(this[this.tableTInvoices.STATUSColumn]));
                }
                set {
                    this[this.tableTInvoices.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARK {
                get {
                    return ((string)(this[this.tableTInvoices.REMARKColumn]));
                }
                set {
                    this[this.tableTInvoices.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER {
                get {
                    return ((string)(this[this.tableTInvoices.OPERColumn]));
                }
                set {
                    this[this.tableTInvoices.OPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OWR {
                get {
                    return ((string)(this[this.tableTInvoices.OWRColumn]));
                }
                set {
                    this[this.tableTInvoices.OWRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTimeOffset RECEIVABLEDATE {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableTInvoices.RECEIVABLEDATEColumn]));
                }
                set {
                    this[this.tableTInvoices.RECEIVABLEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTimeOffset OP_DT {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableTInvoices.OP_DTColumn]));
                }
                set {
                    this[this.tableTInvoices.OP_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTimeOffset INVOICE_DATE {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableTInvoices.INVOICE_DATEColumn]));
                }
                set {
                    this[this.tableTInvoices.INVOICE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FIX_ID {
                get {
                    return ((int)(this[this.tableTInvoices.FIX_IDColumn]));
                }
                set {
                    this[this.tableTInvoices.FIX_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TFixturesRow TFixturesRow {
                get {
                    return ((TFixturesRow)(this.GetParentRow(this.Table.ParentRelations["TFixtures_TInvoices"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TFixtures_TInvoices"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoiceDetailsRow[] GetTInvoiceDetailsRows() {
                if ((this.Table.ChildRelations["TInvoices_TInvoiceDetails"] == null)) {
                    return new TInvoiceDetailsRow[0];
                }
                else {
                    return ((TInvoiceDetailsRow[])(base.GetChildRows(this.Table.ChildRelations["TInvoices_TInvoiceDetails"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TVesselsRow : global::System.Data.DataRow {
            
            private TVesselsDataTable tableTVessels;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TVesselsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTVessels = ((TVesselsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableTVessels.IDColumn]));
                }
                set {
                    this[this.tableTVessels.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME {
                get {
                    return ((string)(this[this.tableTVessels.NAMEColumn]));
                }
                set {
                    this[this.tableTVessels.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SIZE {
                get {
                    return ((string)(this[this.tableTVessels.SIZEColumn]));
                }
                set {
                    this[this.tableTVessels.SIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESC {
                get {
                    return ((string)(this[this.tableTVessels.DESCColumn]));
                }
                set {
                    this[this.tableTVessels.DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER {
                get {
                    return ((string)(this[this.tableTVessels.OPERColumn]));
                }
                set {
                    this[this.tableTVessels.OPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTimeOffset OP_DT {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableTVessels.OP_DTColumn]));
                }
                set {
                    this[this.tableTVessels.OP_DTColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TFixturesRow : global::System.Data.DataRow {
            
            private TFixturesDataTable tableTFixtures;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TFixturesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTFixtures = ((TFixturesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableTFixtures.IDColumn]));
                }
                set {
                    this[this.tableTFixtures.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VSL_ID {
                get {
                    return ((int)(this[this.tableTFixtures.VSL_IDColumn]));
                }
                set {
                    this[this.tableTFixtures.VSL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTimeOffset CP_DATE {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableTFixtures.CP_DATEColumn]));
                }
                set {
                    this[this.tableTFixtures.CP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CP_TYPE {
                get {
                    return ((string)(this[this.tableTFixtures.CP_TYPEColumn]));
                }
                set {
                    this[this.tableTFixtures.CP_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CP_DESC {
                get {
                    return ((string)(this[this.tableTFixtures.CP_DESCColumn]));
                }
                set {
                    this[this.tableTFixtures.CP_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PAYER {
                get {
                    return ((string)(this[this.tableTFixtures.PAYERColumn]));
                }
                set {
                    this[this.tableTFixtures.PAYERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HRORFRT {
                get {
                    return ((decimal)(this[this.tableTFixtures.HRORFRTColumn]));
                }
                set {
                    this[this.tableTFixtures.HRORFRTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DAYSORMT {
                get {
                    return ((decimal)(this[this.tableTFixtures.DAYSORMTColumn]));
                }
                set {
                    this[this.tableTFixtures.DAYSORMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OWR {
                get {
                    return ((string)(this[this.tableTFixtures.OWRColumn]));
                }
                set {
                    this[this.tableTFixtures.OWRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BRKRATE_OWR {
                get {
                    return ((decimal)(this[this.tableTFixtures.BRKRATE_OWRColumn]));
                }
                set {
                    this[this.tableTFixtures.BRKRATE_OWRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BRKAMOUNT_OWR {
                get {
                    return ((decimal)(this[this.tableTFixtures.BRKAMOUNT_OWRColumn]));
                }
                set {
                    this[this.tableTFixtures.BRKAMOUNT_OWRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHR {
                get {
                    return ((string)(this[this.tableTFixtures.CHRColumn]));
                }
                set {
                    this[this.tableTFixtures.CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BRKRATE_CHR {
                get {
                    return ((decimal)(this[this.tableTFixtures.BRKRATE_CHRColumn]));
                }
                set {
                    this[this.tableTFixtures.BRKRATE_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BRKAMOUNT_CHR {
                get {
                    return ((decimal)(this[this.tableTFixtures.BRKAMOUNT_CHRColumn]));
                }
                set {
                    this[this.tableTFixtures.BRKAMOUNT_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ESTBRK {
                get {
                    return ((decimal)(this[this.tableTFixtures.ESTBRKColumn]));
                }
                set {
                    this[this.tableTFixtures.ESTBRKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BROKER1 {
                get {
                    return ((string)(this[this.tableTFixtures.BROKER1Column]));
                }
                set {
                    this[this.tableTFixtures.BROKER1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BROKER2 {
                get {
                    return ((string)(this[this.tableTFixtures.BROKER2Column]));
                }
                set {
                    this[this.tableTFixtures.BROKER2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SIGNOPER {
                get {
                    return ((string)(this[this.tableTFixtures.SIGNOPERColumn]));
                }
                set {
                    this[this.tableTFixtures.SIGNOPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CAP_RATE {
                get {
                    return ((decimal)(this[this.tableTFixtures.CAP_RATEColumn]));
                }
                set {
                    this[this.tableTFixtures.CAP_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CAP_AMOUNT {
                get {
                    return ((decimal)(this[this.tableTFixtures.CAP_AMOUNTColumn]));
                }
                set {
                    this[this.tableTFixtures.CAP_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TFCB {
                get {
                    return ((int)(this[this.tableTFixtures.TFCBColumn]));
                }
                set {
                    this[this.tableTFixtures.TFCBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIXNO {
                get {
                    return ((string)(this[this.tableTFixtures.FIXNOColumn]));
                }
                set {
                    this[this.tableTFixtures.FIXNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATUS {
                get {
                    return ((string)(this[this.tableTFixtures.STATUSColumn]));
                }
                set {
                    this[this.tableTFixtures.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARK {
                get {
                    return ((string)(this[this.tableTFixtures.REMARKColumn]));
                }
                set {
                    this[this.tableTFixtures.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER {
                get {
                    return ((string)(this[this.tableTFixtures.OPERColumn]));
                }
                set {
                    this[this.tableTFixtures.OPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTimeOffset OP_DT {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableTFixtures.OP_DTColumn]));
                }
                set {
                    this[this.tableTFixtures.OP_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoicesRow[] GetTInvoicesRows() {
                if ((this.Table.ChildRelations["TFixtures_TInvoices"] == null)) {
                    return new TInvoicesRow[0];
                }
                else {
                    return ((TInvoicesRow[])(base.GetChildRows(this.Table.ChildRelations["TFixtures_TInvoices"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TInvoiceDetailsRow : global::System.Data.DataRow {
            
            private TInvoiceDetailsDataTable tableTInvoiceDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TInvoiceDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTInvoiceDetails = ((TInvoiceDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableTInvoiceDetails.IDColumn]));
                }
                set {
                    this[this.tableTInvoiceDetails.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string C1 {
                get {
                    return ((string)(this[this.tableTInvoiceDetails.C1Column]));
                }
                set {
                    this[this.tableTInvoiceDetails.C1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string C2 {
                get {
                    return ((string)(this[this.tableTInvoiceDetails.C2Column]));
                }
                set {
                    this[this.tableTInvoiceDetails.C2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string C3 {
                get {
                    return ((string)(this[this.tableTInvoiceDetails.C3Column]));
                }
                set {
                    this[this.tableTInvoiceDetails.C3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string C4 {
                get {
                    return ((string)(this[this.tableTInvoiceDetails.C4Column]));
                }
                set {
                    this[this.tableTInvoiceDetails.C4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string C5 {
                get {
                    return ((string)(this[this.tableTInvoiceDetails.C5Column]));
                }
                set {
                    this[this.tableTInvoiceDetails.C5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER {
                get {
                    return ((string)(this[this.tableTInvoiceDetails.OPERColumn]));
                }
                set {
                    this[this.tableTInvoiceDetails.OPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTimeOffset OP_DT {
                get {
                    return ((global::System.DateTimeOffset)(this[this.tableTInvoiceDetails.OP_DTColumn]));
                }
                set {
                    this[this.tableTInvoiceDetails.OP_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int INVOICE_ID {
                get {
                    return ((int)(this[this.tableTInvoiceDetails.INVOICE_IDColumn]));
                }
                set {
                    this[this.tableTInvoiceDetails.INVOICE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DEBIT {
                get {
                    return ((decimal)(this[this.tableTInvoiceDetails.DEBITColumn]));
                }
                set {
                    this[this.tableTInvoiceDetails.DEBITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CREDIT {
                get {
                    return ((decimal)(this[this.tableTInvoiceDetails.CREDITColumn]));
                }
                set {
                    this[this.tableTInvoiceDetails.CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoicesRow TInvoicesRow {
                get {
                    return ((TInvoicesRow)(this.GetParentRow(this.Table.ParentRelations["TInvoices_TInvoiceDetails"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TInvoices_TInvoiceDetails"]);
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TSys_UsersRowChangeEvent : global::System.EventArgs {
            
            private TSys_UsersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TSys_UsersRowChangeEvent(TSys_UsersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TSys_UsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TInvoicesRowChangeEvent : global::System.EventArgs {
            
            private TInvoicesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoicesRowChangeEvent(TInvoicesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoicesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TVesselsRowChangeEvent : global::System.EventArgs {
            
            private TVesselsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TVesselsRowChangeEvent(TVesselsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TVesselsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TFixturesRowChangeEvent : global::System.EventArgs {
            
            private TFixturesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TFixturesRowChangeEvent(TFixturesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TFixturesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TInvoiceDetailsRowChangeEvent : global::System.EventArgs {
            
            private TInvoiceDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoiceDetailsRowChangeEvent(TInvoiceDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TInvoiceDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace BMS_DAL.DS.BMSDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TSys_UsersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TSys_UsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TSys_Users";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("PWD", "PWD");
            tableMapping.ColumnMappings.Add("USERTYPE", "USERTYPE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TSys_Users] ([ID], [NAME], [PWD], [USERTYPE]) VALUES (@ID, @NAME, @P" +
                "WD, @USERTYPE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PWD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PWD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BMS_DAL.Properties.Settings.Default.bds248164437_dbConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT   ID, NAME, PWD, USERTYPE\r\nFROM      TSys_Users";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BMSDS.TSys_UsersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BMSDS.TSys_UsersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BMSDS.TSys_UsersDataTable dataTable = new BMSDS.TSys_UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BMSDS.TSys_UsersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BMSDS dataSet) {
            return this.Adapter.Update(dataSet, "TSys_Users");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID, string NAME, string PWD, string USERTYPE) {
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((NAME == null)) {
                throw new global::System.ArgumentNullException("NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME));
            }
            if ((PWD == null)) {
                throw new global::System.ArgumentNullException("PWD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PWD));
            }
            if ((USERTYPE == null)) {
                throw new global::System.ArgumentNullException("USERTYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(USERTYPE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TInvoicesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TInvoicesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TInvoices";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("FIXNO", "FIXNO");
            tableMapping.ColumnMappings.Add("REFNO", "REFNO");
            tableMapping.ColumnMappings.Add("MESSES", "MESSES");
            tableMapping.ColumnMappings.Add("VSL_ID", "VSL_ID");
            tableMapping.ColumnMappings.Add("CP_DATE", "CP_DATE");
            tableMapping.ColumnMappings.Add("CP_TYPE", "CP_TYPE");
            tableMapping.ColumnMappings.Add("CP_DESC", "CP_DESC");
            tableMapping.ColumnMappings.Add("HRORFRT", "HRORFRT");
            tableMapping.ColumnMappings.Add("DAYSORMT", "DAYSORMT");
            tableMapping.ColumnMappings.Add("ATIN", "ATIN");
            tableMapping.ColumnMappings.Add("CWNO", "CWNO");
            tableMapping.ColumnMappings.Add("BRKRATE_OWR", "BRKRATE_OWR");
            tableMapping.ColumnMappings.Add("BRKAMOUNT_OWR", "BRKAMOUNT_OWR");
            tableMapping.ColumnMappings.Add("CHR", "CHR");
            tableMapping.ColumnMappings.Add("BRKRATE_CHR", "BRKRATE_CHR");
            tableMapping.ColumnMappings.Add("BRKAMOUNT_CHR", "BRKAMOUNT_CHR");
            tableMapping.ColumnMappings.Add("PERIODS", "PERIODS");
            tableMapping.ColumnMappings.Add("BANKACCOUNT", "BANKACCOUNT");
            tableMapping.ColumnMappings.Add("RECEIVABLEAMOUNT", "RECEIVABLEAMOUNT");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("OPER", "OPER");
            tableMapping.ColumnMappings.Add("OWR", "OWR");
            tableMapping.ColumnMappings.Add("RECEIVABLEDATE", "RECEIVABLEDATE");
            tableMapping.ColumnMappings.Add("OP_DT", "OP_DT");
            tableMapping.ColumnMappings.Add("INVOICE_DATE", "INVOICE_DATE");
            tableMapping.ColumnMappings.Add("FIX_ID", "FIX_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TInvoices] WHERE (([ID] = @Original_ID) AND ([VSL_ID] = @Original_VSL_ID) AND ([CP_DATE] = @Original_CP_DATE) AND ([HRORFRT] = @Original_HRORFRT) AND ([DAYSORMT] = @Original_DAYSORMT) AND ([BRKRATE_OWR] = @Original_BRKRATE_OWR) AND ([BRKAMOUNT_OWR] = @Original_BRKAMOUNT_OWR) AND ([BRKRATE_CHR] = @Original_BRKRATE_CHR) AND ([BRKAMOUNT_CHR] = @Original_BRKAMOUNT_CHR) AND ([RECEIVABLEAMOUNT] = @Original_RECEIVABLEAMOUNT) AND ([RECEIVABLEDATE] = @Original_RECEIVABLEDATE) AND ([OP_DT] = @Original_OP_DT) AND ([INVOICE_DATE] = @Original_INVOICE_DATE) AND ([FIX_ID] = @Original_FIX_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VSL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CP_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HRORFRT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HRORFRT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAYSORMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DAYSORMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKRATE_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_OWR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKAMOUNT_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_OWR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKRATE_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_CHR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKAMOUNT_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_CHR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIVABLEAMOUNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RECEIVABLEAMOUNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIVABLEDATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVABLEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INVOICE_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVOICE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIX_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIX_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TInvoices] ([FIXNO], [REFNO], [MESSES], [VSL_ID], [CP_DATE], [CP_TYPE], [CP_DESC], [HRORFRT], [DAYSORMT], [ATIN], [CWNO], [BRKRATE_OWR], [BRKAMOUNT_OWR], [CHR], [BRKRATE_CHR], [BRKAMOUNT_CHR], [PERIODS], [BANKACCOUNT], [RECEIVABLEAMOUNT], [STATUS], [REMARK], [OPER], [OWR], [RECEIVABLEDATE], [OP_DT], [INVOICE_DATE], [FIX_ID]) VALUES (@FIXNO, @REFNO, @MESSES, @VSL_ID, @CP_DATE, @CP_TYPE, @CP_DESC, @HRORFRT, @DAYSORMT, @ATIN, @CWNO, @BRKRATE_OWR, @BRKAMOUNT_OWR, @CHR, @BRKRATE_CHR, @BRKAMOUNT_CHR, @PERIODS, @BANKACCOUNT, @RECEIVABLEAMOUNT, @STATUS, @REMARK, @OPER, @OWR, @RECEIVABLEDATE, @OP_DT, @INVOICE_DATE, @FIX_ID);
SELECT ID, FIXNO, REFNO, MESSES, VSL_ID, CP_DATE, CP_TYPE, CP_DESC, HRORFRT, DAYSORMT, ATIN, CWNO, BRKRATE_OWR, BRKAMOUNT_OWR, CHR, BRKRATE_CHR, BRKAMOUNT_CHR, PERIODS, BANKACCOUNT, RECEIVABLEAMOUNT, STATUS, REMARK, OPER, OWR, RECEIVABLEDATE, OP_DT, INVOICE_DATE, FIX_ID FROM TInvoices WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MESSES", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MESSES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VSL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRORFRT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HRORFRT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAYSORMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DAYSORMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CWNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CWNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKRATE_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKAMOUNT_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKRATE_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKAMOUNT_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERIODS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERIODS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BANKACCOUNT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKACCOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIVABLEAMOUNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RECEIVABLEAMOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OWR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIVABLEDATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVABLEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVOICE_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVOICE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIX_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TInvoices] SET [FIXNO] = @FIXNO, [REFNO] = @REFNO, [MESSES] = @MESSES, [V" +
                "SL_ID] = @VSL_ID, [CP_DATE] = @CP_DATE, [CP_TYPE] = @CP_TYPE, [CP_DESC] = @CP_DE" +
                "SC, [HRORFRT] = @HRORFRT, [DAYSORMT] = @DAYSORMT, [ATIN] = @ATIN, [CWNO] = @CWNO" +
                ", [BRKRATE_OWR] = @BRKRATE_OWR, [BRKAMOUNT_OWR] = @BRKAMOUNT_OWR, [CHR] = @CHR, " +
                "[BRKRATE_CHR] = @BRKRATE_CHR, [BRKAMOUNT_CHR] = @BRKAMOUNT_CHR, [PERIODS] = @PER" +
                "IODS, [BANKACCOUNT] = @BANKACCOUNT, [RECEIVABLEAMOUNT] = @RECEIVABLEAMOUNT, [STA" +
                "TUS] = @STATUS, [REMARK] = @REMARK, [OPER] = @OPER, [OWR] = @OWR, [RECEIVABLEDAT" +
                "E] = @RECEIVABLEDATE, [OP_DT] = @OP_DT, [INVOICE_DATE] = @INVOICE_DATE, [FIX_ID]" +
                " = @FIX_ID WHERE (([ID] = @Original_ID) AND ([VSL_ID] = @Original_VSL_ID) AND ([" +
                "CP_DATE] = @Original_CP_DATE) AND ([HRORFRT] = @Original_HRORFRT) AND ([DAYSORMT" +
                "] = @Original_DAYSORMT) AND ([BRKRATE_OWR] = @Original_BRKRATE_OWR) AND ([BRKAMO" +
                "UNT_OWR] = @Original_BRKAMOUNT_OWR) AND ([BRKRATE_CHR] = @Original_BRKRATE_CHR) " +
                "AND ([BRKAMOUNT_CHR] = @Original_BRKAMOUNT_CHR) AND ([RECEIVABLEAMOUNT] = @Origi" +
                "nal_RECEIVABLEAMOUNT) AND ([RECEIVABLEDATE] = @Original_RECEIVABLEDATE) AND ([OP" +
                "_DT] = @Original_OP_DT) AND ([INVOICE_DATE] = @Original_INVOICE_DATE) AND ([FIX_" +
                "ID] = @Original_FIX_ID));\r\nSELECT ID, FIXNO, REFNO, MESSES, VSL_ID, CP_DATE, CP_" +
                "TYPE, CP_DESC, HRORFRT, DAYSORMT, ATIN, CWNO, BRKRATE_OWR, BRKAMOUNT_OWR, CHR, B" +
                "RKRATE_CHR, BRKAMOUNT_CHR, PERIODS, BANKACCOUNT, RECEIVABLEAMOUNT, STATUS, REMAR" +
                "K, OPER, OWR, RECEIVABLEDATE, OP_DT, INVOICE_DATE, FIX_ID FROM TInvoices WHERE (" +
                "ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MESSES", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MESSES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VSL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRORFRT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HRORFRT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAYSORMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DAYSORMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CWNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CWNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKRATE_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKAMOUNT_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKRATE_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKAMOUNT_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERIODS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERIODS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BANKACCOUNT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKACCOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIVABLEAMOUNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RECEIVABLEAMOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OWR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIVABLEDATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVABLEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVOICE_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVOICE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIX_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIX_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VSL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CP_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HRORFRT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HRORFRT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAYSORMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DAYSORMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKRATE_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_OWR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKAMOUNT_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_OWR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKRATE_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_CHR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKAMOUNT_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_CHR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIVABLEAMOUNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "RECEIVABLEAMOUNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIVABLEDATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVABLEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INVOICE_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVOICE_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIX_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIX_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BMS_DAL.Properties.Settings.Default.bds248164437_dbConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT  ID, FIXNO, REFNO, MESSES, VSL_ID, CP_DATE, CP_TYPE, CP_DESC, HRORFRT, DAYSORMT, ATIN, CWNO, 
                   BRKRATE_OWR, BRKAMOUNT_OWR, CHR, BRKRATE_CHR, BRKAMOUNT_CHR, PERIODS, BANKACCOUNT, 
                   RECEIVABLEAMOUNT, STATUS, REMARK, OPER, OWR, RECEIVABLEDATE, OP_DT, INVOICE_DATE, FIX_ID
FROM      TInvoices";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BMSDS.TInvoicesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BMSDS.TInvoicesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BMSDS.TInvoicesDataTable dataTable = new BMSDS.TInvoicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BMSDS.TInvoicesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BMSDS dataSet) {
            return this.Adapter.Update(dataSet, "TInvoices");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, int Original_VSL_ID, System.DateTimeOffset Original_CP_DATE, decimal Original_HRORFRT, decimal Original_DAYSORMT, decimal Original_BRKRATE_OWR, decimal Original_BRKAMOUNT_OWR, decimal Original_BRKRATE_CHR, decimal Original_BRKAMOUNT_CHR, decimal Original_RECEIVABLEAMOUNT, System.DateTimeOffset Original_RECEIVABLEDATE, System.DateTimeOffset Original_OP_DT, System.DateTimeOffset Original_INVOICE_DATE, int Original_FIX_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_VSL_ID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTimeOffset)(Original_CP_DATE));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_HRORFRT));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_DAYSORMT));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_BRKRATE_OWR));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_BRKAMOUNT_OWR));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_BRKRATE_CHR));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_BRKAMOUNT_CHR));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_RECEIVABLEAMOUNT));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTimeOffset)(Original_RECEIVABLEDATE));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTimeOffset)(Original_OP_DT));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTimeOffset)(Original_INVOICE_DATE));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_FIX_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string FIXNO, 
                    string REFNO, 
                    string MESSES, 
                    int VSL_ID, 
                    System.DateTimeOffset CP_DATE, 
                    string CP_TYPE, 
                    string CP_DESC, 
                    decimal HRORFRT, 
                    decimal DAYSORMT, 
                    string ATIN, 
                    string CWNO, 
                    decimal BRKRATE_OWR, 
                    decimal BRKAMOUNT_OWR, 
                    string CHR, 
                    decimal BRKRATE_CHR, 
                    decimal BRKAMOUNT_CHR, 
                    string PERIODS, 
                    string BANKACCOUNT, 
                    decimal RECEIVABLEAMOUNT, 
                    string STATUS, 
                    string REMARK, 
                    string OPER, 
                    string OWR, 
                    System.DateTimeOffset RECEIVABLEDATE, 
                    System.DateTimeOffset OP_DT, 
                    System.DateTimeOffset INVOICE_DATE, 
                    int FIX_ID) {
            if ((FIXNO == null)) {
                throw new global::System.ArgumentNullException("FIXNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FIXNO));
            }
            if ((REFNO == null)) {
                throw new global::System.ArgumentNullException("REFNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(REFNO));
            }
            if ((MESSES == null)) {
                throw new global::System.ArgumentNullException("MESSES");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MESSES));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(VSL_ID));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTimeOffset)(CP_DATE));
            if ((CP_TYPE == null)) {
                throw new global::System.ArgumentNullException("CP_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CP_TYPE));
            }
            if ((CP_DESC == null)) {
                throw new global::System.ArgumentNullException("CP_DESC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CP_DESC));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(HRORFRT));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(DAYSORMT));
            if ((ATIN == null)) {
                throw new global::System.ArgumentNullException("ATIN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ATIN));
            }
            if ((CWNO == null)) {
                throw new global::System.ArgumentNullException("CWNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CWNO));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(BRKRATE_OWR));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(BRKAMOUNT_OWR));
            if ((CHR == null)) {
                throw new global::System.ArgumentNullException("CHR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CHR));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(BRKRATE_CHR));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(BRKAMOUNT_CHR));
            if ((PERIODS == null)) {
                throw new global::System.ArgumentNullException("PERIODS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PERIODS));
            }
            if ((BANKACCOUNT == null)) {
                throw new global::System.ArgumentNullException("BANKACCOUNT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(BANKACCOUNT));
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(RECEIVABLEAMOUNT));
            if ((STATUS == null)) {
                throw new global::System.ArgumentNullException("STATUS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(STATUS));
            }
            if ((REMARK == null)) {
                throw new global::System.ArgumentNullException("REMARK");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(REMARK));
            }
            if ((OPER == null)) {
                throw new global::System.ArgumentNullException("OPER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(OPER));
            }
            if ((OWR == null)) {
                throw new global::System.ArgumentNullException("OWR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(OWR));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTimeOffset)(RECEIVABLEDATE));
            this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTimeOffset)(OP_DT));
            this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTimeOffset)(INVOICE_DATE));
            this.Adapter.InsertCommand.Parameters[26].Value = ((int)(FIX_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FIXNO, 
                    string REFNO, 
                    string MESSES, 
                    int VSL_ID, 
                    System.DateTimeOffset CP_DATE, 
                    string CP_TYPE, 
                    string CP_DESC, 
                    decimal HRORFRT, 
                    decimal DAYSORMT, 
                    string ATIN, 
                    string CWNO, 
                    decimal BRKRATE_OWR, 
                    decimal BRKAMOUNT_OWR, 
                    string CHR, 
                    decimal BRKRATE_CHR, 
                    decimal BRKAMOUNT_CHR, 
                    string PERIODS, 
                    string BANKACCOUNT, 
                    decimal RECEIVABLEAMOUNT, 
                    string STATUS, 
                    string REMARK, 
                    string OPER, 
                    string OWR, 
                    System.DateTimeOffset RECEIVABLEDATE, 
                    System.DateTimeOffset OP_DT, 
                    System.DateTimeOffset INVOICE_DATE, 
                    int FIX_ID, 
                    int Original_ID, 
                    int Original_VSL_ID, 
                    System.DateTimeOffset Original_CP_DATE, 
                    decimal Original_HRORFRT, 
                    decimal Original_DAYSORMT, 
                    decimal Original_BRKRATE_OWR, 
                    decimal Original_BRKAMOUNT_OWR, 
                    decimal Original_BRKRATE_CHR, 
                    decimal Original_BRKAMOUNT_CHR, 
                    decimal Original_RECEIVABLEAMOUNT, 
                    System.DateTimeOffset Original_RECEIVABLEDATE, 
                    System.DateTimeOffset Original_OP_DT, 
                    System.DateTimeOffset Original_INVOICE_DATE, 
                    int Original_FIX_ID, 
                    int ID) {
            if ((FIXNO == null)) {
                throw new global::System.ArgumentNullException("FIXNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FIXNO));
            }
            if ((REFNO == null)) {
                throw new global::System.ArgumentNullException("REFNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(REFNO));
            }
            if ((MESSES == null)) {
                throw new global::System.ArgumentNullException("MESSES");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MESSES));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(VSL_ID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTimeOffset)(CP_DATE));
            if ((CP_TYPE == null)) {
                throw new global::System.ArgumentNullException("CP_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CP_TYPE));
            }
            if ((CP_DESC == null)) {
                throw new global::System.ArgumentNullException("CP_DESC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CP_DESC));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(HRORFRT));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(DAYSORMT));
            if ((ATIN == null)) {
                throw new global::System.ArgumentNullException("ATIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ATIN));
            }
            if ((CWNO == null)) {
                throw new global::System.ArgumentNullException("CWNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CWNO));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(BRKRATE_OWR));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(BRKAMOUNT_OWR));
            if ((CHR == null)) {
                throw new global::System.ArgumentNullException("CHR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CHR));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(BRKRATE_CHR));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(BRKAMOUNT_CHR));
            if ((PERIODS == null)) {
                throw new global::System.ArgumentNullException("PERIODS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(PERIODS));
            }
            if ((BANKACCOUNT == null)) {
                throw new global::System.ArgumentNullException("BANKACCOUNT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(BANKACCOUNT));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(RECEIVABLEAMOUNT));
            if ((STATUS == null)) {
                throw new global::System.ArgumentNullException("STATUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(STATUS));
            }
            if ((REMARK == null)) {
                throw new global::System.ArgumentNullException("REMARK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(REMARK));
            }
            if ((OPER == null)) {
                throw new global::System.ArgumentNullException("OPER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(OPER));
            }
            if ((OWR == null)) {
                throw new global::System.ArgumentNullException("OWR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(OWR));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTimeOffset)(RECEIVABLEDATE));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTimeOffset)(OP_DT));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTimeOffset)(INVOICE_DATE));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(FIX_ID));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_VSL_ID));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTimeOffset)(Original_CP_DATE));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_HRORFRT));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_DAYSORMT));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_BRKRATE_OWR));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_BRKAMOUNT_OWR));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_BRKRATE_CHR));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_BRKAMOUNT_CHR));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Original_RECEIVABLEAMOUNT));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTimeOffset)(Original_RECEIVABLEDATE));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTimeOffset)(Original_OP_DT));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTimeOffset)(Original_INVOICE_DATE));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_FIX_ID));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FIXNO, 
                    string REFNO, 
                    string MESSES, 
                    int VSL_ID, 
                    System.DateTimeOffset CP_DATE, 
                    string CP_TYPE, 
                    string CP_DESC, 
                    decimal HRORFRT, 
                    decimal DAYSORMT, 
                    string ATIN, 
                    string CWNO, 
                    decimal BRKRATE_OWR, 
                    decimal BRKAMOUNT_OWR, 
                    string CHR, 
                    decimal BRKRATE_CHR, 
                    decimal BRKAMOUNT_CHR, 
                    string PERIODS, 
                    string BANKACCOUNT, 
                    decimal RECEIVABLEAMOUNT, 
                    string STATUS, 
                    string REMARK, 
                    string OPER, 
                    string OWR, 
                    System.DateTimeOffset RECEIVABLEDATE, 
                    System.DateTimeOffset OP_DT, 
                    System.DateTimeOffset INVOICE_DATE, 
                    int FIX_ID, 
                    int Original_ID, 
                    int Original_VSL_ID, 
                    System.DateTimeOffset Original_CP_DATE, 
                    decimal Original_HRORFRT, 
                    decimal Original_DAYSORMT, 
                    decimal Original_BRKRATE_OWR, 
                    decimal Original_BRKAMOUNT_OWR, 
                    decimal Original_BRKRATE_CHR, 
                    decimal Original_BRKAMOUNT_CHR, 
                    decimal Original_RECEIVABLEAMOUNT, 
                    System.DateTimeOffset Original_RECEIVABLEDATE, 
                    System.DateTimeOffset Original_OP_DT, 
                    System.DateTimeOffset Original_INVOICE_DATE, 
                    int Original_FIX_ID) {
            return this.Update(FIXNO, REFNO, MESSES, VSL_ID, CP_DATE, CP_TYPE, CP_DESC, HRORFRT, DAYSORMT, ATIN, CWNO, BRKRATE_OWR, BRKAMOUNT_OWR, CHR, BRKRATE_CHR, BRKAMOUNT_CHR, PERIODS, BANKACCOUNT, RECEIVABLEAMOUNT, STATUS, REMARK, OPER, OWR, RECEIVABLEDATE, OP_DT, INVOICE_DATE, FIX_ID, Original_ID, Original_VSL_ID, Original_CP_DATE, Original_HRORFRT, Original_DAYSORMT, Original_BRKRATE_OWR, Original_BRKAMOUNT_OWR, Original_BRKRATE_CHR, Original_BRKAMOUNT_CHR, Original_RECEIVABLEAMOUNT, Original_RECEIVABLEDATE, Original_OP_DT, Original_INVOICE_DATE, Original_FIX_ID, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TVesselsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TVesselsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TVessels";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("SIZE", "SIZE");
            tableMapping.ColumnMappings.Add("DESC", "DESC");
            tableMapping.ColumnMappings.Add("OPER", "OPER");
            tableMapping.ColumnMappings.Add("OP_DT", "OP_DT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TVessels] WHERE (([ID] = @Original_ID) AND ([OP_DT] = @Original_OP_D" +
                "T))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TVessels] ([NAME], [SIZE], [DESC], [OPER], [OP_DT]) VALUES (@NAME, @" +
                "SIZE, @DESC, @OPER, @OP_DT);\r\nSELECT ID, NAME, SIZE, [DESC], OPER, OP_DT FROM TV" +
                "essels WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIZE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIZE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TVessels] SET [NAME] = @NAME, [SIZE] = @SIZE, [DESC] = @DESC, [OPER] = @O" +
                "PER, [OP_DT] = @OP_DT WHERE (([ID] = @Original_ID) AND ([OP_DT] = @Original_OP_D" +
                "T));\r\nSELECT ID, NAME, SIZE, [DESC], OPER, OP_DT FROM TVessels WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIZE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIZE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BMS_DAL.Properties.Settings.Default.bds248164437_dbConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT  ID, NAME, SIZE, [DESC], OPER, OP_DT\r\nFROM      TVessels";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BMSDS.TVesselsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BMSDS.TVesselsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BMSDS.TVesselsDataTable dataTable = new BMSDS.TVesselsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BMSDS.TVesselsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BMSDS dataSet) {
            return this.Adapter.Update(dataSet, "TVessels");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, System.DateTimeOffset Original_OP_DT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTimeOffset)(Original_OP_DT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NAME, string SIZE, string DESC, string OPER, System.DateTimeOffset OP_DT) {
            if ((NAME == null)) {
                throw new global::System.ArgumentNullException("NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NAME));
            }
            if ((SIZE == null)) {
                throw new global::System.ArgumentNullException("SIZE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SIZE));
            }
            if ((DESC == null)) {
                throw new global::System.ArgumentNullException("DESC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DESC));
            }
            if ((OPER == null)) {
                throw new global::System.ArgumentNullException("OPER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(OPER));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTimeOffset)(OP_DT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME, string SIZE, string DESC, string OPER, System.DateTimeOffset OP_DT, int Original_ID, System.DateTimeOffset Original_OP_DT, int ID) {
            if ((NAME == null)) {
                throw new global::System.ArgumentNullException("NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NAME));
            }
            if ((SIZE == null)) {
                throw new global::System.ArgumentNullException("SIZE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SIZE));
            }
            if ((DESC == null)) {
                throw new global::System.ArgumentNullException("DESC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DESC));
            }
            if ((OPER == null)) {
                throw new global::System.ArgumentNullException("OPER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(OPER));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTimeOffset)(OP_DT));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTimeOffset)(Original_OP_DT));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME, string SIZE, string DESC, string OPER, System.DateTimeOffset OP_DT, int Original_ID, System.DateTimeOffset Original_OP_DT) {
            return this.Update(NAME, SIZE, DESC, OPER, OP_DT, Original_ID, Original_OP_DT, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TFixturesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TFixturesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TFixtures";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("VSL_ID", "VSL_ID");
            tableMapping.ColumnMappings.Add("CP_DATE", "CP_DATE");
            tableMapping.ColumnMappings.Add("CP_TYPE", "CP_TYPE");
            tableMapping.ColumnMappings.Add("CP_DESC", "CP_DESC");
            tableMapping.ColumnMappings.Add("PAYER", "PAYER");
            tableMapping.ColumnMappings.Add("HRORFRT", "HRORFRT");
            tableMapping.ColumnMappings.Add("DAYSORMT", "DAYSORMT");
            tableMapping.ColumnMappings.Add("OWR", "OWR");
            tableMapping.ColumnMappings.Add("BRKRATE_OWR", "BRKRATE_OWR");
            tableMapping.ColumnMappings.Add("BRKAMOUNT_OWR", "BRKAMOUNT_OWR");
            tableMapping.ColumnMappings.Add("CHR", "CHR");
            tableMapping.ColumnMappings.Add("BRKRATE_CHR", "BRKRATE_CHR");
            tableMapping.ColumnMappings.Add("BRKAMOUNT_CHR", "BRKAMOUNT_CHR");
            tableMapping.ColumnMappings.Add("ESTBRK", "ESTBRK");
            tableMapping.ColumnMappings.Add("BROKER1", "BROKER1");
            tableMapping.ColumnMappings.Add("BROKER2", "BROKER2");
            tableMapping.ColumnMappings.Add("SIGNOPER", "SIGNOPER");
            tableMapping.ColumnMappings.Add("CAP_RATE", "CAP_RATE");
            tableMapping.ColumnMappings.Add("CAP_AMOUNT", "CAP_AMOUNT");
            tableMapping.ColumnMappings.Add("TFCB", "TFCB");
            tableMapping.ColumnMappings.Add("FIXNO", "FIXNO");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("OPER", "OPER");
            tableMapping.ColumnMappings.Add("OP_DT", "OP_DT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TFixtures] WHERE (([ID] = @Original_ID) AND ([VSL_ID] = @Original_VSL_ID) AND ([CP_DATE] = @Original_CP_DATE) AND ([HRORFRT] = @Original_HRORFRT) AND ([DAYSORMT] = @Original_DAYSORMT) AND ([BRKRATE_OWR] = @Original_BRKRATE_OWR) AND ([BRKAMOUNT_OWR] = @Original_BRKAMOUNT_OWR) AND ([BRKRATE_CHR] = @Original_BRKRATE_CHR) AND ([BRKAMOUNT_CHR] = @Original_BRKAMOUNT_CHR) AND ([ESTBRK] = @Original_ESTBRK) AND ([CAP_RATE] = @Original_CAP_RATE) AND ([CAP_AMOUNT] = @Original_CAP_AMOUNT) AND ([TFCB] = @Original_TFCB) AND ([OP_DT] = @Original_OP_DT))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VSL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CP_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HRORFRT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HRORFRT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAYSORMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DAYSORMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKRATE_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_OWR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKAMOUNT_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_OWR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKRATE_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_CHR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKAMOUNT_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_CHR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTBRK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ESTBRK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAP_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CAP_RATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAP_AMOUNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CAP_AMOUNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TFCB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TFCB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TFixtures] ([VSL_ID], [CP_DATE], [CP_TYPE], [CP_DESC], [PAYER], [HRORFRT], [DAYSORMT], [OWR], [BRKRATE_OWR], [BRKAMOUNT_OWR], [CHR], [BRKRATE_CHR], [BRKAMOUNT_CHR], [ESTBRK], [BROKER1], [BROKER2], [SIGNOPER], [CAP_RATE], [CAP_AMOUNT], [TFCB], [FIXNO], [STATUS], [REMARK], [OPER], [OP_DT]) VALUES (@VSL_ID, @CP_DATE, @CP_TYPE, @CP_DESC, @PAYER, @HRORFRT, @DAYSORMT, @OWR, @BRKRATE_OWR, @BRKAMOUNT_OWR, @CHR, @BRKRATE_CHR, @BRKAMOUNT_CHR, @ESTBRK, @BROKER1, @BROKER2, @SIGNOPER, @CAP_RATE, @CAP_AMOUNT, @TFCB, @FIXNO, @STATUS, @REMARK, @OPER, @OP_DT);
SELECT ID, VSL_ID, CP_DATE, CP_TYPE, CP_DESC, PAYER, HRORFRT, DAYSORMT, OWR, BRKRATE_OWR, BRKAMOUNT_OWR, CHR, BRKRATE_CHR, BRKAMOUNT_CHR, ESTBRK, BROKER1, BROKER2, SIGNOPER, CAP_RATE, CAP_AMOUNT, TFCB, FIXNO, STATUS, REMARK, OPER, OP_DT FROM TFixtures WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VSL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAYER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAYER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRORFRT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HRORFRT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAYSORMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DAYSORMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OWR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKRATE_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKAMOUNT_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKRATE_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKAMOUNT_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTBRK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ESTBRK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BROKER1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BROKER1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BROKER2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BROKER2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIGNOPER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIGNOPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAP_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CAP_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAP_AMOUNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CAP_AMOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TFCB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TFCB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TFixtures] SET [VSL_ID] = @VSL_ID, [CP_DATE] = @CP_DATE, [CP_TYPE] = @CP_TYPE, [CP_DESC] = @CP_DESC, [PAYER] = @PAYER, [HRORFRT] = @HRORFRT, [DAYSORMT] = @DAYSORMT, [OWR] = @OWR, [BRKRATE_OWR] = @BRKRATE_OWR, [BRKAMOUNT_OWR] = @BRKAMOUNT_OWR, [CHR] = @CHR, [BRKRATE_CHR] = @BRKRATE_CHR, [BRKAMOUNT_CHR] = @BRKAMOUNT_CHR, [ESTBRK] = @ESTBRK, [BROKER1] = @BROKER1, [BROKER2] = @BROKER2, [SIGNOPER] = @SIGNOPER, [CAP_RATE] = @CAP_RATE, [CAP_AMOUNT] = @CAP_AMOUNT, [TFCB] = @TFCB, [FIXNO] = @FIXNO, [STATUS] = @STATUS, [REMARK] = @REMARK, [OPER] = @OPER, [OP_DT] = @OP_DT WHERE (([ID] = @Original_ID) AND ([VSL_ID] = @Original_VSL_ID) AND ([CP_DATE] = @Original_CP_DATE) AND ([HRORFRT] = @Original_HRORFRT) AND ([DAYSORMT] = @Original_DAYSORMT) AND ([BRKRATE_OWR] = @Original_BRKRATE_OWR) AND ([BRKAMOUNT_OWR] = @Original_BRKAMOUNT_OWR) AND ([BRKRATE_CHR] = @Original_BRKRATE_CHR) AND ([BRKAMOUNT_CHR] = @Original_BRKAMOUNT_CHR) AND ([ESTBRK] = @Original_ESTBRK) AND ([CAP_RATE] = @Original_CAP_RATE) AND ([CAP_AMOUNT] = @Original_CAP_AMOUNT) AND ([TFCB] = @Original_TFCB) AND ([OP_DT] = @Original_OP_DT));
SELECT ID, VSL_ID, CP_DATE, CP_TYPE, CP_DESC, PAYER, HRORFRT, DAYSORMT, OWR, BRKRATE_OWR, BRKAMOUNT_OWR, CHR, BRKRATE_CHR, BRKAMOUNT_CHR, ESTBRK, BROKER1, BROKER2, SIGNOPER, CAP_RATE, CAP_AMOUNT, TFCB, FIXNO, STATUS, REMARK, OPER, OP_DT FROM TFixtures WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VSL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSL_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CP_DESC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DESC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAYER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAYER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRORFRT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HRORFRT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAYSORMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DAYSORMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OWR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKRATE_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKAMOUNT_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_OWR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKRATE_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BRKAMOUNT_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_CHR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ESTBRK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ESTBRK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BROKER1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BROKER1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BROKER2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BROKER2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIGNOPER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIGNOPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAP_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CAP_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAP_AMOUNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CAP_AMOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TFCB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TFCB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VSL_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSL_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CP_DATE", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HRORFRT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "HRORFRT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAYSORMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DAYSORMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKRATE_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_OWR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKAMOUNT_OWR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_OWR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKRATE_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKRATE_CHR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BRKAMOUNT_CHR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "BRKAMOUNT_CHR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ESTBRK", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ESTBRK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAP_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CAP_RATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAP_AMOUNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CAP_AMOUNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TFCB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TFCB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BMS_DAL.Properties.Settings.Default.bds248164437_dbConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT   ID, VSL_ID, CP_DATE, CP_TYPE, CP_DESC, PAYER, HRORFRT, DAYSORMT, OWR, BRKRATE_OWR, 
                BRKAMOUNT_OWR, CHR, BRKRATE_CHR, BRKAMOUNT_CHR, ESTBRK, BROKER1, BROKER2, SIGNOPER, CAP_RATE, 
                CAP_AMOUNT, TFCB, FIXNO, STATUS, REMARK, OPER, OP_DT
FROM      TFixtures";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BMSDS.TFixturesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BMSDS.TFixturesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BMSDS.TFixturesDataTable dataTable = new BMSDS.TFixturesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BMSDS.TFixturesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BMSDS dataSet) {
            return this.Adapter.Update(dataSet, "TFixtures");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, int Original_VSL_ID, System.DateTimeOffset Original_CP_DATE, decimal Original_HRORFRT, decimal Original_DAYSORMT, decimal Original_BRKRATE_OWR, decimal Original_BRKAMOUNT_OWR, decimal Original_BRKRATE_CHR, decimal Original_BRKAMOUNT_CHR, decimal Original_ESTBRK, decimal Original_CAP_RATE, decimal Original_CAP_AMOUNT, int Original_TFCB, System.DateTimeOffset Original_OP_DT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_VSL_ID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTimeOffset)(Original_CP_DATE));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_HRORFRT));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_DAYSORMT));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_BRKRATE_OWR));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_BRKAMOUNT_OWR));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_BRKRATE_CHR));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_BRKAMOUNT_CHR));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_ESTBRK));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_CAP_RATE));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_CAP_AMOUNT));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_TFCB));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTimeOffset)(Original_OP_DT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int VSL_ID, 
                    System.DateTimeOffset CP_DATE, 
                    string CP_TYPE, 
                    string CP_DESC, 
                    string PAYER, 
                    decimal HRORFRT, 
                    decimal DAYSORMT, 
                    string OWR, 
                    decimal BRKRATE_OWR, 
                    decimal BRKAMOUNT_OWR, 
                    string CHR, 
                    decimal BRKRATE_CHR, 
                    decimal BRKAMOUNT_CHR, 
                    decimal ESTBRK, 
                    string BROKER1, 
                    string BROKER2, 
                    string SIGNOPER, 
                    decimal CAP_RATE, 
                    decimal CAP_AMOUNT, 
                    int TFCB, 
                    string FIXNO, 
                    string STATUS, 
                    string REMARK, 
                    string OPER, 
                    System.DateTimeOffset OP_DT) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(VSL_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTimeOffset)(CP_DATE));
            if ((CP_TYPE == null)) {
                throw new global::System.ArgumentNullException("CP_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CP_TYPE));
            }
            if ((CP_DESC == null)) {
                throw new global::System.ArgumentNullException("CP_DESC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CP_DESC));
            }
            if ((PAYER == null)) {
                throw new global::System.ArgumentNullException("PAYER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PAYER));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(HRORFRT));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(DAYSORMT));
            if ((OWR == null)) {
                throw new global::System.ArgumentNullException("OWR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(OWR));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(BRKRATE_OWR));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(BRKAMOUNT_OWR));
            if ((CHR == null)) {
                throw new global::System.ArgumentNullException("CHR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CHR));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(BRKRATE_CHR));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(BRKAMOUNT_CHR));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(ESTBRK));
            if ((BROKER1 == null)) {
                throw new global::System.ArgumentNullException("BROKER1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(BROKER1));
            }
            if ((BROKER2 == null)) {
                throw new global::System.ArgumentNullException("BROKER2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(BROKER2));
            }
            if ((SIGNOPER == null)) {
                throw new global::System.ArgumentNullException("SIGNOPER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(SIGNOPER));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(CAP_RATE));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(CAP_AMOUNT));
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(TFCB));
            if ((FIXNO == null)) {
                throw new global::System.ArgumentNullException("FIXNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(FIXNO));
            }
            if ((STATUS == null)) {
                throw new global::System.ArgumentNullException("STATUS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(STATUS));
            }
            if ((REMARK == null)) {
                throw new global::System.ArgumentNullException("REMARK");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(REMARK));
            }
            if ((OPER == null)) {
                throw new global::System.ArgumentNullException("OPER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(OPER));
            }
            this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTimeOffset)(OP_DT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int VSL_ID, 
                    System.DateTimeOffset CP_DATE, 
                    string CP_TYPE, 
                    string CP_DESC, 
                    string PAYER, 
                    decimal HRORFRT, 
                    decimal DAYSORMT, 
                    string OWR, 
                    decimal BRKRATE_OWR, 
                    decimal BRKAMOUNT_OWR, 
                    string CHR, 
                    decimal BRKRATE_CHR, 
                    decimal BRKAMOUNT_CHR, 
                    decimal ESTBRK, 
                    string BROKER1, 
                    string BROKER2, 
                    string SIGNOPER, 
                    decimal CAP_RATE, 
                    decimal CAP_AMOUNT, 
                    int TFCB, 
                    string FIXNO, 
                    string STATUS, 
                    string REMARK, 
                    string OPER, 
                    System.DateTimeOffset OP_DT, 
                    int Original_ID, 
                    int Original_VSL_ID, 
                    System.DateTimeOffset Original_CP_DATE, 
                    decimal Original_HRORFRT, 
                    decimal Original_DAYSORMT, 
                    decimal Original_BRKRATE_OWR, 
                    decimal Original_BRKAMOUNT_OWR, 
                    decimal Original_BRKRATE_CHR, 
                    decimal Original_BRKAMOUNT_CHR, 
                    decimal Original_ESTBRK, 
                    decimal Original_CAP_RATE, 
                    decimal Original_CAP_AMOUNT, 
                    int Original_TFCB, 
                    System.DateTimeOffset Original_OP_DT, 
                    int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(VSL_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTimeOffset)(CP_DATE));
            if ((CP_TYPE == null)) {
                throw new global::System.ArgumentNullException("CP_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CP_TYPE));
            }
            if ((CP_DESC == null)) {
                throw new global::System.ArgumentNullException("CP_DESC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CP_DESC));
            }
            if ((PAYER == null)) {
                throw new global::System.ArgumentNullException("PAYER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PAYER));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(HRORFRT));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(DAYSORMT));
            if ((OWR == null)) {
                throw new global::System.ArgumentNullException("OWR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(OWR));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(BRKRATE_OWR));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(BRKAMOUNT_OWR));
            if ((CHR == null)) {
                throw new global::System.ArgumentNullException("CHR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CHR));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(BRKRATE_CHR));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(BRKAMOUNT_CHR));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(ESTBRK));
            if ((BROKER1 == null)) {
                throw new global::System.ArgumentNullException("BROKER1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(BROKER1));
            }
            if ((BROKER2 == null)) {
                throw new global::System.ArgumentNullException("BROKER2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(BROKER2));
            }
            if ((SIGNOPER == null)) {
                throw new global::System.ArgumentNullException("SIGNOPER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(SIGNOPER));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(CAP_RATE));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(CAP_AMOUNT));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(TFCB));
            if ((FIXNO == null)) {
                throw new global::System.ArgumentNullException("FIXNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(FIXNO));
            }
            if ((STATUS == null)) {
                throw new global::System.ArgumentNullException("STATUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(STATUS));
            }
            if ((REMARK == null)) {
                throw new global::System.ArgumentNullException("REMARK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(REMARK));
            }
            if ((OPER == null)) {
                throw new global::System.ArgumentNullException("OPER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(OPER));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTimeOffset)(OP_DT));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_VSL_ID));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTimeOffset)(Original_CP_DATE));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_HRORFRT));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_DAYSORMT));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_BRKRATE_OWR));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_BRKAMOUNT_OWR));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_BRKRATE_CHR));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_BRKAMOUNT_CHR));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_ESTBRK));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_CAP_RATE));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Original_CAP_AMOUNT));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_TFCB));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTimeOffset)(Original_OP_DT));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int VSL_ID, 
                    System.DateTimeOffset CP_DATE, 
                    string CP_TYPE, 
                    string CP_DESC, 
                    string PAYER, 
                    decimal HRORFRT, 
                    decimal DAYSORMT, 
                    string OWR, 
                    decimal BRKRATE_OWR, 
                    decimal BRKAMOUNT_OWR, 
                    string CHR, 
                    decimal BRKRATE_CHR, 
                    decimal BRKAMOUNT_CHR, 
                    decimal ESTBRK, 
                    string BROKER1, 
                    string BROKER2, 
                    string SIGNOPER, 
                    decimal CAP_RATE, 
                    decimal CAP_AMOUNT, 
                    int TFCB, 
                    string FIXNO, 
                    string STATUS, 
                    string REMARK, 
                    string OPER, 
                    System.DateTimeOffset OP_DT, 
                    int Original_ID, 
                    int Original_VSL_ID, 
                    System.DateTimeOffset Original_CP_DATE, 
                    decimal Original_HRORFRT, 
                    decimal Original_DAYSORMT, 
                    decimal Original_BRKRATE_OWR, 
                    decimal Original_BRKAMOUNT_OWR, 
                    decimal Original_BRKRATE_CHR, 
                    decimal Original_BRKAMOUNT_CHR, 
                    decimal Original_ESTBRK, 
                    decimal Original_CAP_RATE, 
                    decimal Original_CAP_AMOUNT, 
                    int Original_TFCB, 
                    System.DateTimeOffset Original_OP_DT) {
            return this.Update(VSL_ID, CP_DATE, CP_TYPE, CP_DESC, PAYER, HRORFRT, DAYSORMT, OWR, BRKRATE_OWR, BRKAMOUNT_OWR, CHR, BRKRATE_CHR, BRKAMOUNT_CHR, ESTBRK, BROKER1, BROKER2, SIGNOPER, CAP_RATE, CAP_AMOUNT, TFCB, FIXNO, STATUS, REMARK, OPER, OP_DT, Original_ID, Original_VSL_ID, Original_CP_DATE, Original_HRORFRT, Original_DAYSORMT, Original_BRKRATE_OWR, Original_BRKAMOUNT_OWR, Original_BRKRATE_CHR, Original_BRKAMOUNT_CHR, Original_ESTBRK, Original_CAP_RATE, Original_CAP_AMOUNT, Original_TFCB, Original_OP_DT, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TInvoiceDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TInvoiceDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TInvoiceDetails";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("C1", "C1");
            tableMapping.ColumnMappings.Add("C2", "C2");
            tableMapping.ColumnMappings.Add("C3", "C3");
            tableMapping.ColumnMappings.Add("C4", "C4");
            tableMapping.ColumnMappings.Add("C5", "C5");
            tableMapping.ColumnMappings.Add("OPER", "OPER");
            tableMapping.ColumnMappings.Add("OP_DT", "OP_DT");
            tableMapping.ColumnMappings.Add("INVOICE_ID", "INVOICE_ID");
            tableMapping.ColumnMappings.Add("DEBIT", "DEBIT");
            tableMapping.ColumnMappings.Add("CREDIT", "CREDIT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TInvoiceDetails] WHERE (([ID] = @Original_ID) AND ([OP_DT] = @Origin" +
                "al_OP_DT) AND ([INVOICE_ID] = @Original_INVOICE_ID) AND ([DEBIT] = @Original_DEB" +
                "IT) AND ([CREDIT] = @Original_CREDIT))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INVOICE_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVOICE_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEBIT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DEBIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREDIT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CREDIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TInvoiceDetails] ([C1], [C2], [C3], [C4], [C5], [OPER], [OP_DT], [INVOICE_ID], [DEBIT], [CREDIT]) VALUES (@C1, @C2, @C3, @C4, @C5, @OPER, @OP_DT, @INVOICE_ID, @DEBIT, @CREDIT);
SELECT ID, C1, C2, C3, C4, C5, OPER, OP_DT, INVOICE_ID, DEBIT, CREDIT FROM TInvoiceDetails WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVOICE_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVOICE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEBIT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DEBIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREDIT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CREDIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TInvoiceDetails] SET [C1] = @C1, [C2] = @C2, [C3] = @C3, [C4] = @C4, [C5] = @C5, [OPER] = @OPER, [OP_DT] = @OP_DT, [INVOICE_ID] = @INVOICE_ID, [DEBIT] = @DEBIT, [CREDIT] = @CREDIT WHERE (([ID] = @Original_ID) AND ([OP_DT] = @Original_OP_DT) AND ([INVOICE_ID] = @Original_INVOICE_ID) AND ([DEBIT] = @Original_DEBIT) AND ([CREDIT] = @Original_CREDIT));
SELECT ID, C1, C2, C3, C4, C5, OPER, OP_DT, INVOICE_ID, DEBIT, CREDIT FROM TInvoiceDetails WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVOICE_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVOICE_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEBIT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DEBIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREDIT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CREDIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OP_DT", global::System.Data.SqlDbType.DateTimeOffset, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OP_DT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INVOICE_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INVOICE_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEBIT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "DEBIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREDIT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "CREDIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::BMS_DAL.Properties.Settings.Default.bds248164437_dbConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT  ID, C1, C2, C3, C4, C5, OPER, OP_DT, INVOICE_ID, DEBIT, CREDIT\r\nFROM     " +
                " TInvoiceDetails";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BMSDS.TInvoiceDetailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BMSDS.TInvoiceDetailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BMSDS.TInvoiceDetailsDataTable dataTable = new BMSDS.TInvoiceDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BMSDS.TInvoiceDetailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BMSDS dataSet) {
            return this.Adapter.Update(dataSet, "TInvoiceDetails");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, System.DateTimeOffset Original_OP_DT, int Original_INVOICE_ID, decimal Original_DEBIT, decimal Original_CREDIT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTimeOffset)(Original_OP_DT));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_INVOICE_ID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_DEBIT));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_CREDIT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string C1, string C2, string C3, string C4, string C5, string OPER, System.DateTimeOffset OP_DT, int INVOICE_ID, decimal DEBIT, decimal CREDIT) {
            if ((C1 == null)) {
                throw new global::System.ArgumentNullException("C1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(C1));
            }
            if ((C2 == null)) {
                throw new global::System.ArgumentNullException("C2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(C2));
            }
            if ((C3 == null)) {
                throw new global::System.ArgumentNullException("C3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(C3));
            }
            if ((C4 == null)) {
                throw new global::System.ArgumentNullException("C4");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(C4));
            }
            if ((C5 == null)) {
                throw new global::System.ArgumentNullException("C5");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(C5));
            }
            if ((OPER == null)) {
                throw new global::System.ArgumentNullException("OPER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(OPER));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTimeOffset)(OP_DT));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(INVOICE_ID));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(DEBIT));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(CREDIT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string C1, 
                    string C2, 
                    string C3, 
                    string C4, 
                    string C5, 
                    string OPER, 
                    System.DateTimeOffset OP_DT, 
                    int INVOICE_ID, 
                    decimal DEBIT, 
                    decimal CREDIT, 
                    int Original_ID, 
                    System.DateTimeOffset Original_OP_DT, 
                    int Original_INVOICE_ID, 
                    decimal Original_DEBIT, 
                    decimal Original_CREDIT, 
                    int ID) {
            if ((C1 == null)) {
                throw new global::System.ArgumentNullException("C1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(C1));
            }
            if ((C2 == null)) {
                throw new global::System.ArgumentNullException("C2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(C2));
            }
            if ((C3 == null)) {
                throw new global::System.ArgumentNullException("C3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(C3));
            }
            if ((C4 == null)) {
                throw new global::System.ArgumentNullException("C4");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(C4));
            }
            if ((C5 == null)) {
                throw new global::System.ArgumentNullException("C5");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(C5));
            }
            if ((OPER == null)) {
                throw new global::System.ArgumentNullException("OPER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(OPER));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTimeOffset)(OP_DT));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(INVOICE_ID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(DEBIT));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(CREDIT));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTimeOffset)(Original_OP_DT));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_INVOICE_ID));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_DEBIT));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_CREDIT));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string C1, string C2, string C3, string C4, string C5, string OPER, System.DateTimeOffset OP_DT, int INVOICE_ID, decimal DEBIT, decimal CREDIT, int Original_ID, System.DateTimeOffset Original_OP_DT, int Original_INVOICE_ID, decimal Original_DEBIT, decimal Original_CREDIT) {
            return this.Update(C1, C2, C3, C4, C5, OPER, OP_DT, INVOICE_ID, DEBIT, CREDIT, Original_ID, Original_OP_DT, Original_INVOICE_ID, Original_DEBIT, Original_CREDIT, Original_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TSys_UsersTableAdapter _tSys_UsersTableAdapter;
        
        private TInvoicesTableAdapter _tInvoicesTableAdapter;
        
        private TVesselsTableAdapter _tVesselsTableAdapter;
        
        private TFixturesTableAdapter _tFixturesTableAdapter;
        
        private TInvoiceDetailsTableAdapter _tInvoiceDetailsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TSys_UsersTableAdapter TSys_UsersTableAdapter {
            get {
                return this._tSys_UsersTableAdapter;
            }
            set {
                this._tSys_UsersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TInvoicesTableAdapter TInvoicesTableAdapter {
            get {
                return this._tInvoicesTableAdapter;
            }
            set {
                this._tInvoicesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TVesselsTableAdapter TVesselsTableAdapter {
            get {
                return this._tVesselsTableAdapter;
            }
            set {
                this._tVesselsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TFixturesTableAdapter TFixturesTableAdapter {
            get {
                return this._tFixturesTableAdapter;
            }
            set {
                this._tFixturesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TInvoiceDetailsTableAdapter TInvoiceDetailsTableAdapter {
            get {
                return this._tInvoiceDetailsTableAdapter;
            }
            set {
                this._tInvoiceDetailsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tSys_UsersTableAdapter != null) 
                            && (this._tSys_UsersTableAdapter.Connection != null))) {
                    return this._tSys_UsersTableAdapter.Connection;
                }
                if (((this._tInvoicesTableAdapter != null) 
                            && (this._tInvoicesTableAdapter.Connection != null))) {
                    return this._tInvoicesTableAdapter.Connection;
                }
                if (((this._tVesselsTableAdapter != null) 
                            && (this._tVesselsTableAdapter.Connection != null))) {
                    return this._tVesselsTableAdapter.Connection;
                }
                if (((this._tFixturesTableAdapter != null) 
                            && (this._tFixturesTableAdapter.Connection != null))) {
                    return this._tFixturesTableAdapter.Connection;
                }
                if (((this._tInvoiceDetailsTableAdapter != null) 
                            && (this._tInvoiceDetailsTableAdapter.Connection != null))) {
                    return this._tInvoiceDetailsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tSys_UsersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tInvoicesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tVesselsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tFixturesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tInvoiceDetailsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(BMSDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tFixturesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TFixtures.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tFixturesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tInvoicesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TInvoices.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tInvoicesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tSys_UsersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TSys_Users.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tSys_UsersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tVesselsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TVessels.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tVesselsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tInvoiceDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TInvoiceDetails.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tInvoiceDetailsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(BMSDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tFixturesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TFixtures.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tFixturesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tInvoicesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TInvoices.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tInvoicesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tSys_UsersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TSys_Users.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tSys_UsersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tVesselsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TVessels.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tVesselsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tInvoiceDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TInvoiceDetails.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tInvoiceDetailsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(BMSDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tInvoiceDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TInvoiceDetails.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tInvoiceDetailsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tVesselsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TVessels.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tVesselsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tSys_UsersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TSys_Users.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tSys_UsersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tInvoicesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TInvoices.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tInvoicesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tFixturesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TFixtures.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tFixturesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(BMSDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tSys_UsersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tSys_UsersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._tInvoicesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tInvoicesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._tVesselsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tVesselsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._tFixturesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tFixturesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._tInvoiceDetailsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tInvoiceDetailsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tSys_UsersTableAdapter != null)) {
                    revertConnections.Add(this._tSys_UsersTableAdapter, this._tSys_UsersTableAdapter.Connection);
                    this._tSys_UsersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tSys_UsersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tSys_UsersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tSys_UsersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tSys_UsersTableAdapter.Adapter);
                    }
                }
                if ((this._tInvoicesTableAdapter != null)) {
                    revertConnections.Add(this._tInvoicesTableAdapter, this._tInvoicesTableAdapter.Connection);
                    this._tInvoicesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tInvoicesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tInvoicesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tInvoicesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tInvoicesTableAdapter.Adapter);
                    }
                }
                if ((this._tVesselsTableAdapter != null)) {
                    revertConnections.Add(this._tVesselsTableAdapter, this._tVesselsTableAdapter.Connection);
                    this._tVesselsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tVesselsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tVesselsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tVesselsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tVesselsTableAdapter.Adapter);
                    }
                }
                if ((this._tFixturesTableAdapter != null)) {
                    revertConnections.Add(this._tFixturesTableAdapter, this._tFixturesTableAdapter.Connection);
                    this._tFixturesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tFixturesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tFixturesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tFixturesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tFixturesTableAdapter.Adapter);
                    }
                }
                if ((this._tInvoiceDetailsTableAdapter != null)) {
                    revertConnections.Add(this._tInvoiceDetailsTableAdapter, this._tInvoiceDetailsTableAdapter.Connection);
                    this._tInvoiceDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tInvoiceDetailsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tInvoiceDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tInvoiceDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tInvoiceDetailsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tSys_UsersTableAdapter != null)) {
                    this._tSys_UsersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tSys_UsersTableAdapter]));
                    this._tSys_UsersTableAdapter.Transaction = null;
                }
                if ((this._tInvoicesTableAdapter != null)) {
                    this._tInvoicesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tInvoicesTableAdapter]));
                    this._tInvoicesTableAdapter.Transaction = null;
                }
                if ((this._tVesselsTableAdapter != null)) {
                    this._tVesselsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tVesselsTableAdapter]));
                    this._tVesselsTableAdapter.Transaction = null;
                }
                if ((this._tFixturesTableAdapter != null)) {
                    this._tFixturesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tFixturesTableAdapter]));
                    this._tFixturesTableAdapter.Transaction = null;
                }
                if ((this._tInvoiceDetailsTableAdapter != null)) {
                    this._tInvoiceDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tInvoiceDetailsTableAdapter]));
                    this._tInvoiceDetailsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591